{
    "openapi": "3.0.0",
    "info": {
        "version": "2.0",
        "title": "Square Connect",
        "description": "",
        "termsOfService": "http:\/\/exmple.com\/license\/"
    },
    "servers": [
        "http:\/\/connect.squareup.com\/"
    ],
    "paths": {
        "\/v2\/customers": {
            "get": {
                "summary": "Get Customers",
                "description": "Lists a business's customers.",
                "operationId": "ListCustomers",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Customers",
                "description": "Creates a new customer for the business, which can have associated cards on file.",
                "operationId": "CreateCustomer",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/customers\/{customer_id}": {
            "delete": {
                "summary": "Delete Customers",
                "description": "Deletes a customer from a business.",
                "operationId": "DeleteCustomer",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Customers",
                "description": "Returns details for a single customer.",
                "operationId": "RetrieveCustomer",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Customers",
                "description": "Updates the details of an existing customer.",
                "operationId": "UpdateCustomer",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/customers\/{customer_id}\/cards": {
            "post": {
                "summary": "Post Customers Cards",
                "description": "Adds a card on file to an existing customer.",
                "operationId": "CreateCustomerCard",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/customers\/{customer_id}\/cards\/{card_id}": {
            "delete": {
                "summary": "Delete Customers Cards",
                "description": "Removes a card on file from a customer.",
                "operationId": "DeleteCustomerCard",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "customer_id",
                        "in": "path",
                        "description": ""
                    },
                    {
                        "name": "card_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/locations": {
            "get": {
                "summary": "Get Locations",
                "description": "Provides summary information for all of a business's locations.",
                "operationId": "ListLocations",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/locations\/{location_id}\/refunds": {
            "get": {
                "summary": "Get Locations Refunds",
                "description": "Lists refunds for one of a business's locations.",
                "operationId": "ListRefunds",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "begin_time",
                        "in": "query",
                        "description": "The beginning of the requested reporting period, in RFC 3339 format."
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "The end of the requested reporting period, in RFC 3339 format."
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "The order in which results are listed in the response."
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/locations\/{location_id}\/transactions": {
            "get": {
                "summary": "Get Locations Transactions",
                "description": "Lists transactions for a particular location.\n\nWhen making a request to this endpoint, your request body **must** include either the `cursor` parameter, or it must\ninclude both `begin_time` and `end_time` with an optional `sort_order`.",
                "operationId": "ListTransactions",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "begin_time",
                        "in": "query",
                        "description": "The beginning of the requested reporting period, in RFC 3339 format."
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "The end of the requested reporting period, in RFC 3339 format."
                    },
                    {
                        "name": "sort_order",
                        "in": "query",
                        "description": "The order in which results are listed in the response."
                    },
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Locations Transactions",
                "description": "Charges a card represented by a token.",
                "operationId": "Charge",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/locations\/{location_id}\/transactions\/{transaction_id}": {
            "get": {
                "summary": "Get Locations Transactions",
                "description": "Retrieves details for a single transaction.",
                "operationId": "RetrieveTransaction",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "transaction_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/locations\/{location_id}\/transactions\/{transaction_id}\/capture": {
            "post": {
                "summary": "Post Locations Transactions Capture",
                "description": "Captures a transaction that was created with the **Charge**\nendpoint with a `delay_capture` value of `true`.",
                "operationId": "CaptureTransaction",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "transaction_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/locations\/{location_id}\/transactions\/{transaction_id}\/refund": {
            "post": {
                "summary": "Post Locations Transactions Refund",
                "description": "Initiates a refund for a previously charged tender.",
                "operationId": "CreateRefund",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "transaction_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/locations\/{location_id}\/transactions\/{transaction_id}\/void": {
            "post": {
                "summary": "Post Locations Transactions Void",
                "description": "Cancels a transaction that was created with the **Charge**\nendpoint with a `delay_capture` value of `true`.",
                "operationId": "VoidTransaction",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "transaction_id",
                        "in": "path",
                        "description": ""
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/me": {
            "get": {
                "summary": "Get Me",
                "description": "Get a business's information.",
                "operationId": "RetrieveBusiness",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/me\/employees": {
            "get": {
                "summary": "Get Me Employees",
                "description": "Provides summary information for all of a business's employees.",
                "operationId": "ListEmployees",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC "
                    },
                    {
                        "name": "begin_updated_at",
                        "in": "query",
                        "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format"
                    },
                    {
                        "name": "end_updated_at",
                        "in": "query",
                        "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format."
                    },
                    {
                        "name": "begin_created_at",
                        "in": "query",
                        "description": "If filtering results by their created_at field, the beginning of the requested reporting period, in ISO 8601 format."
                    },
                    {
                        "name": "end_created_at",
                        "in": "query",
                        "description": "If filtering results by their created_at field, the end of the requested reporting period, in ISO 8601 format."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE)."
                    },
                    {
                        "name": "external_id",
                        "in": "query",
                        "description": "If provided, the endpoint returns only employee entities with the specified external_id."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
                    },
                    {
                        "name": "batch_token",
                        "in": "query",
                        "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Me Employees",
                "description": "Creates an employee for a business.",
                "operationId": "CreateEmployee",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/me\/employees\/{employee_id}": {
            "get": {
                "summary": "Get Me Employees",
                "description": "Provides the details for a single employee.",
                "operationId": "RetrieveEmployee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "path",
                        "description": "The employee's ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Me Employees",
                "description": "",
                "operationId": "UpdateEmployee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "path",
                        "description": "The employee's ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/me\/locations": {
            "get": {
                "summary": "Get Me Locations",
                "description": "Provides details for a business's locations, including their IDs.",
                "operationId": "V1MeLocationsGet",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/me\/roles": {
            "get": {
                "summary": "Get Me Roles",
                "description": "Provides summary information for all of a business's employee roles.",
                "operationId": "ListEmployeeRoles",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC "
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
                    },
                    {
                        "name": "batch_token",
                        "in": "query",
                        "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Me Roles",
                "description": "Creates an employee role you can then assign to employees.",
                "operationId": "CreateEmployeeRole",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/me\/roles\/{role_id}": {
            "get": {
                "summary": "Get Me Roles",
                "description": "Provides the details for a single employee role.",
                "operationId": "RetrieveEmployeeRole",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "description": "The role's ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Me Roles",
                "description": "Modifies the details of an employee role.",
                "operationId": "UpdateEmployeeRole",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "role_id",
                        "in": "path",
                        "description": "The role's ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/me\/timecards": {
            "get": {
                "summary": "Get Me Timecards",
                "description": "Provides summary information for all of a business's employee timecards.",
                "operationId": "ListTimecards",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC "
                    },
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "If provided, the endpoint returns only timecards for the employee with the specified ID."
                    },
                    {
                        "name": "begin_clockin_time",
                        "in": "query",
                        "description": "If filtering results by their clockin_time field, the beginning of the requested reporting period, in ISO 8601 format."
                    },
                    {
                        "name": "end_clockin_time",
                        "in": "query",
                        "description": "If filtering results by their clockin_time field, the end of the requested reporting period, in ISO 8601 format."
                    },
                    {
                        "name": "begin_clockout_time",
                        "in": "query",
                        "description": "If filtering results by their clockout_time field, the beginning of the requested reporting period, in ISO 8601 format."
                    },
                    {
                        "name": "end_clockout_time",
                        "in": "query",
                        "description": "If filtering results by their clockout_time field, the end of the requested reporting period, in ISO 8601 format."
                    },
                    {
                        "name": "begin_updated_at",
                        "in": "query",
                        "description": "If filtering results by their updated_at field, the beginning of the requested reporting period, in ISO 8601 format"
                    },
                    {
                        "name": "end_updated_at",
                        "in": "query",
                        "description": "If filtering results by there updated_at field, the end of the requested reporting period, in ISO 8601 format."
                    },
                    {
                        "name": "deleted",
                        "in": "query",
                        "description": "If true, only deleted timecards are returned. If false, only valid timecards are returned.If you don't provide this parameter, both valid and deleted timecards are returned."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
                    },
                    {
                        "name": "batch_token",
                        "in": "query",
                        "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Me Timecards",
                "description": "Creates a timecard for an employee. Each timecard corresponds to a single shift.",
                "operationId": "CreateTimecard",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/me\/timecards\/{timecard_id}": {
            "delete": {
                "summary": "Delete Me Timecards",
                "description": "Deletes a timecard. Deleted timecards are still accessible from Connect API endpoints, but the value of their deleted field is set to true. See Handling deleted timecards for more information.",
                "operationId": "DeleteTimecard",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "timecard_id",
                        "in": "path",
                        "description": "The ID of the timecard to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Me Timecards",
                "description": "Provides the details for a single timecard.",
                "operationId": "RetrieveTimecard",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "timecard_id",
                        "in": "path",
                        "description": "The ID of the timecard to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Me Timecards",
                "description": "Modifies a timecard's details. This creates an API_EDIT event for the timecard. You can view a timecard's event history with the List Timecard Events endpoint.",
                "operationId": "UpdateTimecard",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "timecard_id",
                        "in": "path",
                        "description": "The ID of the timecard to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/me\/timecards\/{timecard_id}\/events": {
            "get": {
                "summary": "Get Me Timecards Events",
                "description": "Provides summary information for all events associated with a particular timecard.",
                "operationId": "ListTimecardEvents",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "timecard_id",
                        "in": "path",
                        "description": "The ID of the timecard to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/bank-accounts": {
            "get": {
                "summary": "Get Location Bank Accounts",
                "description": "Provides non-confidential details for all of a location's associated bank accounts. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
                "operationId": "ListBankAccounts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/bank-accounts\/{bank_account_id}": {
            "get": {
                "summary": "Get Location Bank Accounts Bank Account",
                "description": "Provides non-confidential details for a merchant's associated bank account. This endpoint does not provide full bank account numbers, and there is no way to obtain a full bank account number with the Connect API.",
                "operationId": "RetrieveBankAccount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "bank_account_id",
                        "in": "path",
                        "description": "The bank account's Square-issued ID. You obtain this value from Settlement objects returned."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/cash-drawer-shifts": {
            "get": {
                "summary": "Get Location Cash Drawer Shifts",
                "description": "Provides the details for all of a location's cash drawer shifts during a date range. The date range you specify cannot exceed 90 days.",
                "operationId": "ListCashDrawerShifts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC "
                    },
                    {
                        "name": "begin_time",
                        "in": "query",
                        "description": "The beginning of the requested reporting period, in RFC 3339 format."
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "The end of the requested reporting period, in RFC 3339 format."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/cash-drawer-shifts\/{shift_id}": {
            "get": {
                "summary": "Get Location Cash Drawer Shifts",
                "description": "Provides the details for a single cash drawer shift, including all events that occurred during the shift.",
                "operationId": "RetrieveCashDrawerShift",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "shift_id",
                        "in": "path",
                        "description": "The shift's ID."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/categories": {
            "get": {
                "summary": "Get Location Categories",
                "description": "Lists all of a location's item categories.",
                "operationId": "ListCategories",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Location Categories",
                "description": "Creates an item category.",
                "operationId": "CreateCategory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/categories\/{category_id}": {
            "delete": {
                "summary": "Delete Location Categories Category",
                "description": "Deletes an existing item category.",
                "operationId": "DeleteCategory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "The ID of the category to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Categories Category",
                "description": "Modifies the details of an existing item category.",
                "operationId": "UpdateCategory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "category_id",
                        "in": "path",
                        "description": "The ID of the category to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/discounts": {
            "get": {
                "summary": "Get Location Discounts",
                "description": "Lists all of a location's discounts.",
                "operationId": "ListDiscounts",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Location Discounts",
                "description": "Creates a discount.",
                "operationId": "CreateDiscount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/discounts\/{discount_id}": {
            "delete": {
                "summary": "Delete Location Discounts",
                "description": "Deletes an existing discount.",
                "operationId": "DeleteDiscount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "discount_id",
                        "in": "path",
                        "description": "The ID of the discount to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Discounts",
                "description": "Modifies the details of an existing discount.",
                "operationId": "UpdateDiscount",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "discount_id",
                        "in": "path",
                        "description": "The ID of the discount to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/fees": {
            "get": {
                "summary": "Get Location Fees",
                "description": "Lists all of a location's fees (taxes).",
                "operationId": "ListFees",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Location Fees",
                "description": "Creates a fee (tax).",
                "operationId": "CreateFee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/fees\/{fee_id}": {
            "delete": {
                "summary": "Delete Location Fees",
                "description": "Deletes an existing fee (tax).",
                "operationId": "DeleteFee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "fee_id",
                        "in": "path",
                        "description": "The ID of the fee to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Fees",
                "description": "Modifies the details of an existing fee (tax).",
                "operationId": "UpdateFee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "fee_id",
                        "in": "path",
                        "description": "The ID of the fee to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/inventory": {
            "get": {
                "summary": "Get Location Inventory",
                "description": "Provides inventory information for all of a merchant's inventory-enabled item variations.",
                "operationId": "ListInventory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
                    },
                    {
                        "name": "batch_token",
                        "in": "query",
                        "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/inventory\/{variation_id}": {
            "post": {
                "summary": "Post Location Inventory Variation",
                "description": "Adjusts an item variation's current available inventory.",
                "operationId": "AdjustInventory",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "variation_id",
                        "in": "path",
                        "description": "The ID of the variation to adjust inventory information for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/items": {
            "get": {
                "summary": "Get Location Items",
                "description": "Provides summary information for all of a location's items.",
                "operationId": "ListItems",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "batch_token",
                        "in": "query",
                        "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Location Items",
                "description": "Creates an item and at least one variation for it.",
                "operationId": "CreateItem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/items\/{item_id}": {
            "delete": {
                "summary": "Delete Location Items",
                "description": "Deletes an existing item and all item variations associated with it.",
                "operationId": "DeleteItem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "The ID of the item to modify."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Location Items",
                "description": "Provides the details for a single item, including associated modifier lists and fees.",
                "operationId": "RetrieveItem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "The ID of the item to modify."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Items",
                "description": "Modifies the core details of an existing item.",
                "operationId": "UpdateItem",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "The ID of the item to modify."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/items\/{item_id}\/fees\/{fee_id}": {
            "delete": {
                "summary": "Delete Location Items Fees",
                "description": "Removes a fee assocation from an item, meaning the fee is no longer automatically applied to the item in Square Register.",
                "operationId": "RemoveFee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "The ID of the item to modify."
                    },
                    {
                        "name": "fee_id",
                        "in": "path",
                        "description": "The ID of the fee to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Items Fees",
                "description": "Associates a fee with an item, meaning the fee is automatically applied to the item in Square Register.",
                "operationId": "ApplyFee",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "The ID of the item to modify."
                    },
                    {
                        "name": "fee_id",
                        "in": "path",
                        "description": "The ID of the fee to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/items\/{item_id}\/modifier-lists\/{modifier_list_id}": {
            "delete": {
                "summary": "Delete Location Items Modifier Lists Modifier List",
                "description": "Removes a modifier list association from an item, meaning modifier options from the list can no longer be applied to the item.",
                "operationId": "RemoveModifierList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "modifier_list_id",
                        "in": "path",
                        "description": "The ID of the modifier list to remove."
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "The ID of the item to modify."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Items Modifier Lists Modifier List",
                "description": "Associates a modifier list with an item, meaning modifier options from the list can be applied to the item.",
                "operationId": "ApplyModifierList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "modifier_list_id",
                        "in": "path",
                        "description": "The ID of the modifier list to remove."
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "The ID of the item to modify."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/items\/{item_id}\/variations": {
            "post": {
                "summary": "Post Location Items Variations",
                "description": "Creates an item variation for an existing item.",
                "operationId": "CreateVariation",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "The ID of the item to modify."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/items\/{item_id}\/variations\/{variation_id}": {
            "delete": {
                "summary": "Delete Location Items Variations",
                "description": "Deletes an existing item variation from an item.",
                "operationId": "DeleteVariation",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "The ID of the item to modify."
                    },
                    {
                        "name": "variation_id",
                        "in": "path",
                        "description": "The ID of the variation to adjust inventory information for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Items Variations",
                "description": "Modifies the details of an existing item variation.",
                "operationId": "UpdateVariation",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "item_id",
                        "in": "path",
                        "description": "The ID of the item to modify."
                    },
                    {
                        "name": "variation_id",
                        "in": "path",
                        "description": "The ID of the variation to adjust inventory information for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/modifier-lists": {
            "get": {
                "summary": "Get Location Modifier Lists",
                "description": "Lists all of a location's modifier lists.",
                "operationId": "ListModifierLists",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Location Modifier Lists",
                "description": "Creates an item modifier list and at least one modifier option for it.",
                "operationId": "CreateModifierList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/modifier-lists\/{modifier_list_id}": {
            "delete": {
                "summary": "Delete Location Modifier Lists Modifier List",
                "description": "Deletes an existing item modifier list and all modifier options associated with it.",
                "operationId": "DeleteModifierList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "modifier_list_id",
                        "in": "path",
                        "description": "The ID of the modifier list to remove."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Location Modifier Lists Modifier List",
                "description": "Provides the details for a single modifier list.",
                "operationId": "RetrieveModifierList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "modifier_list_id",
                        "in": "path",
                        "description": "The ID of the modifier list to remove."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Modifier Lists Modifier List",
                "description": "Modifies the details of an existing item modifier list.",
                "operationId": "UpdateModifierList",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "modifier_list_id",
                        "in": "path",
                        "description": "The ID of the modifier list to remove."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/modifier-lists\/{modifier_list_id}\/modifier-options": {
            "post": {
                "summary": "Post Location Modifier Lists Modifier List Modifier Options",
                "description": "Creates an item modifier option and adds it to a modifier list.",
                "operationId": "CreateModifierOption",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "modifier_list_id",
                        "in": "path",
                        "description": "The ID of the modifier list to remove."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/modifier-lists\/{modifier_list_id}\/modifier-options\/{modifier_option_id}": {
            "delete": {
                "summary": "Delete Location Modifier Lists Modifier List Modifier Options Modifier Option",
                "description": "Deletes an existing item modifier option from a modifier list.",
                "operationId": "DeleteModifierOption",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "modifier_list_id",
                        "in": "path",
                        "description": "The ID of the modifier list to remove."
                    },
                    {
                        "name": "modifier_option_id",
                        "in": "path",
                        "description": "The ID of the modifier list to edit."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Modifier Lists Modifier List Modifier Options Modifier Option",
                "description": "Modifies the details of an existing item modifier option.",
                "operationId": "UpdateModifierOption",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "modifier_list_id",
                        "in": "path",
                        "description": "The ID of the modifier list to remove."
                    },
                    {
                        "name": "modifier_option_id",
                        "in": "path",
                        "description": "The ID of the modifier list to edit."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/orders": {
            "get": {
                "summary": "Get Location Orders",
                "description": "Provides summary information for a merchant's online store orders.",
                "operationId": "ListOrders",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC "
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
                    },
                    {
                        "name": "batch_token",
                        "in": "query",
                        "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/orders\/{order_id}": {
            "get": {
                "summary": "Get Location Orders",
                "description": "Provides comprehensive information for a single online store order, including the order's history.",
                "operationId": "RetrieveOrder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Orders",
                "description": "Updates the details of an online store order. Every update you perform on an order corresponds to one of three actions:",
                "operationId": "UpdateOrder",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "order_id",
                        "in": "path",
                        "description": "The order's Square-issued ID. You obtain this value from Order objects returned by the List Orders endpoint"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/pages": {
            "get": {
                "summary": "Get Location Pages",
                "description": "Lists all of a location's Favorites pages in Square Register.",
                "operationId": "ListPages",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Location Pages",
                "description": "Creates a Favorites page in Square Register.",
                "operationId": "CreatePage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/pages\/{page_id}": {
            "delete": {
                "summary": "Delete Location Pages",
                "description": "Deletes an existing Favorites page and all of its cells.",
                "operationId": "DeletePage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "page_id",
                        "in": "path",
                        "description": "The ID of the page to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Pages",
                "description": "Modifies the details of a Favorites page in Square Register.",
                "operationId": "UpdatePage",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "page_id",
                        "in": "path",
                        "description": "The ID of the page to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/pages\/{page_id}\/cells": {
            "delete": {
                "summary": "Delete Location Pages Cells",
                "description": "Deletes a cell from a Favorites page in Square Register.",
                "operationId": "DeletePageCell",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "page_id",
                        "in": "path",
                        "description": "The ID of the page to delete."
                    },
                    {
                        "name": "row",
                        "in": "query",
                        "description": "The row of the cell to clear. Always an integer between 0 and 4, inclusive. Row 0 is the top row."
                    },
                    {
                        "name": "column",
                        "in": "query",
                        "description": "The column of the cell to clear. Always an integer between 0 and 4, inclusive. Column 0 is the leftmost column."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Put Location Pages Cells",
                "description": "Modifies a cell of a Favorites page in Square Register.",
                "operationId": "UpdatePageCell",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "page_id",
                        "in": "path",
                        "description": "The ID of the page to delete."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/payments": {
            "get": {
                "summary": "Get Location Payments",
                "description": "Provides summary information for all payments taken by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length. See Date ranges for details of inclusive and exclusive dates.",
                "operationId": "ListPayments",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC "
                    },
                    {
                        "name": "begin_time",
                        "in": "query",
                        "description": "The beginning of the requested reporting period, in RFC 3339 format."
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "The end of the requested reporting period, in RFC 3339 format."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
                    },
                    {
                        "name": "batch_token",
                        "in": "query",
                        "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/payments\/{payment_id}": {
            "get": {
                "summary": "Get Location Payments",
                "description": "Provides comprehensive information for a single payment.",
                "operationId": "RetrievePayment",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "payment_id",
                        "in": "path",
                        "description": "The payment's Square-issued ID. You obtain this value from Payment objects returned by the List Payments endpoint, or Settlement objects returned by the List Settlements endpoint."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/refunds": {
            "get": {
                "summary": "Get Location Refunds",
                "description": "Provides the details for all refunds initiated by a merchant or any of the merchant's mobile staff during a date range. Date ranges cannot exceed one year in length.",
                "operationId": "V1LocationIdRefundsGet",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC "
                    },
                    {
                        "name": "begin_time",
                        "in": "query",
                        "description": "The beginning of the requested reporting period, in RFC 3339 format."
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "The end of the requested reporting period, in RFC 3339 format."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
                    },
                    {
                        "name": "batch_token",
                        "in": "query",
                        "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "summary": "Post Location Refunds",
                "description": "Issues a refund for a previously processed payment. You must issue a refund within 60 days of the associated payment.",
                "operationId": "V1LocationIdRefundsPost",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/settlements": {
            "get": {
                "summary": "Get Location Settlements",
                "description": "Provides summary information for all deposits and withdrawals initiated by Square to a merchant's bank account during a date range. Date ranges cannot exceed one year in length. ",
                "operationId": "ListSettlements",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "order",
                        "in": "query",
                        "description": "The order in which employees are listed in the response, based on their created_at field.      Default value: ASC "
                    },
                    {
                        "name": "begin_time",
                        "in": "query",
                        "description": "The beginning of the requested reporting period, in RFC 3339 format."
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "The end of the requested reporting period, in RFC 3339 format."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "The maximum integer number of employee entities to return in a single response. Default 100, maximum 200."
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "description": "If provided, the endpoint returns only employee entities with the specified status (ACTIVE or INACTIVE)."
                    },
                    {
                        "name": "batch_token",
                        "in": "query",
                        "description": "A pagination cursor to retrieve the next set of results for your\noriginal query to the endpoint."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v1\/{location_id}\/settlements\/{settlement_id}": {
            "get": {
                "summary": "Get Location Settlements",
                "description": "Provides comprehensive information for a single settlement, including the entries that contribute to the settlement's total.",
                "operationId": "RetrieveSettlement",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    },
                    {
                        "name": "settlement_id",
                        "in": "path",
                        "description": "The settlement's Square-issued ID. You obtain this value from Settlement objects returned by the List Settlements endpoint."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/catalog\/batch-delete": {
            "post": {
                "summary": "Post Catalog Batch Delete",
                "description": "Deletes a set of [CatalogItem](#type-catalogitem)s based on the\nprovided list of target IDs and returns a set of successfully deleted IDs in\nthe response. Deletion is a cascading event such that all children of the\ntargeted object are also deleted. For example, deleting a CatalogItem will\nalso delete all of its [CatalogItemVariation](#type-catalogitemvariation)\nchildren.\n\n`BatchDeleteCatalogObjects` succeeds even if only a portion of the targeted\nIDs can be deleted. The response will only includ",
                "operationId": "BatchDeleteCatalogObjects",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/catalog\/batch-retrieve": {
            "post": {
                "summary": "Post Catalog Batch Retrieve",
                "description": "Returns a set of objects based on the provided ID.\nEach [CatalogItem](#type-catalogitem) returned in the set includes all of its\nchild information including: all of its\n[CatalogItemVariation](#type-catalogitemvariation) objects, references to\nits [CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
                "operationId": "BatchRetrieveCatalogObjects",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/catalog\/batch-upsert": {
            "post": {
                "summary": "Post Catalog Batch Upsert",
                "description": "Creates or updates up to 10,000 target objects based on the provided\nlist of objects. The target objects are grouped into batches and each batch is\ninserted\/updated in an all-or-nothing manner. If an object within a batch is\nmalformed in some way, or violates a database constraint, the entire batch\ncontaining that item will be disregarded. However, other batches in the same\nrequest may still succeed. Each batch may contain up to 1,000 objects, and\nbatches will be processed in order as long as th",
                "operationId": "BatchUpsertCatalogObjects",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/catalog\/info": {
            "get": {
                "summary": "Get Catalog Info",
                "description": "Returns information about the Square Catalog API, such as batch size\nlimits for `BatchUpsertCatalogObjects`.",
                "operationId": "CatalogInfo",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/catalog\/list": {
            "get": {
                "summary": "Get Catalog List",
                "description": "Returns a list of [CatalogObject](#type-catalogobject)s that includes\nall objects of a set of desired types (for example, all [CatalogItem](#type-catalogitem)\nand [CatalogTax](#type-catalogtax) objects) in the catalog. The types parameter\nis specified as a comma-separated list of valid [CatalogObject](#type-catalogobject) types:\n`ITEM`, `ITEM_VARIATION`, `MODIFIER`, `MODIFIER_LIST`, `CATEGORY`, `DISCOUNT`, `TAX`.",
                "operationId": "ListCatalog",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "cursor",
                        "in": "query",
                        "description": ""
                    },
                    {
                        "name": "types",
                        "in": "query",
                        "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY`.\n\nThe legal values are taken from the [CatalogObjectType](#type-catalogobjecttype)\nenumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`, `\"DISCOUNT\"`, `\"TAX\"`,\n`\"MODIFIER\"`, or `\"MODIFIER_LIST\"`."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/catalog\/object": {
            "post": {
                "summary": "Post Catalog Object",
                "description": "Creates or updates the target [CatalogObject](#type-catalogobject).",
                "operationId": "UpsertCatalogObject",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/catalog\/object\/{object_id}": {
            "delete": {
                "summary": "Delete Catalog Object",
                "description": "Deletes a single [CatalogObject](#type-catalogobject) based on the\nprovided ID and returns the set of successfully deleted IDs in the response.\nDeletion is a cascading event such that all children of the targeted object\nare also deleted. For example, deleting a [CatalogItem](#type-catalogitem)\nwill also delete all of its\n[CatalogItemVariation](#type-catalogitemvariation) children.",
                "operationId": "DeleteCatalogObject",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "object_id",
                        "in": "path",
                        "description": "The ID of the [CatalogObject](#type-catalogobject) to be deleted. When an object is deleted, other\nobjects in the graph that depend on that object will be deleted as well (for example, deleting a\n[CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s)."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "summary": "Get Catalog Object",
                "description": "Returns a single [CatalogItem](#type-catalogitem) as a\n[CatalogObject](#type-catalogobject) based on the provided ID. The returned\nobject includes all of the relevant [CatalogItem](#type-catalogitem)\ninformation including: [CatalogItemVariation](#type-catalogitemvariation)\nchildren, references to its\n[CatalogModifierList](#type-catalogmodifierlist) objects, and the ids of\nany [CatalogTax](#type-catalogtax) objects that apply to it.",
                "operationId": "RetrieveCatalogObject",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "object_id",
                        "in": "path",
                        "description": "The ID of the [CatalogObject](#type-catalogobject) to be deleted. When an object is deleted, other\nobjects in the graph that depend on that object will be deleted as well (for example, deleting a\n[CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s)."
                    },
                    {
                        "name": "include_related_objects",
                        "in": "query",
                        "description": "If `true`, the response will include additional objects that are related to the\nrequested object, as follows:\n\nIf the `object` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `object` field of the response contains a [CatalogItemVariation](#type-catalogitemvariati"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/catalog\/search": {
            "post": {
                "summary": "Post Catalog Search",
                "description": "Queries the targeted catalog using a variety of query types\n([CatalogQuerySortedAttribute](#type-catalogquerysortedattribute),\n([CatalogQueryExact](#type-catalogqueryexact),\n([CatalogQueryRange](#type-catalogqueryrange),\n([CatalogQueryText](#type-catalogquerytext),\n([CatalogQueryItemsForTax](#type-catalogqueryitemsfortax),\n([CatalogQueryItemsForModifierList](#type-catalogqueryitemsformodifierlist)).",
                "operationId": "SearchCatalogObjects",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/catalog\/update-item-modifier-lists": {
            "post": {
                "summary": "Post Catalog Update Item Modifier Lists",
                "description": "Updates the [CatalogModifierList](#type-catalogmodifierlist) objects\nthat apply to the targeted [CatalogItem](#type-catalogitem) without having\nto perform an upsert on the entire item.",
                "operationId": "UpdateItemModifierLists",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/catalog\/update-item-taxes": {
            "post": {
                "summary": "Post Catalog Update Item Taxes",
                "description": "Updates the [CatalogTax](#type-catalogtax) objects that apply to the\ntargeted [CatalogItem](#type-catalogitem) without having to perform an\nupsert on the entire item.",
                "operationId": "UpdateItemTaxes",
                "deprecated": 0,
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        },
        "\/v2\/locations\/{location_id}\/checkouts": {
            "post": {
                "summary": "Post Locations Checkouts",
                "description": "Creates a [Checkout](#type-checkout) response that links a\n`checkoutId` and `checkout_page_url` that customers can be directed to in\norder to provide their payment information using a payment processing\nworkflow hosted on connect.squareup.com.",
                "operationId": "CreateCheckout",
                "deprecated": 0,
                "parameters": [
                    {
                        "name": "location_id",
                        "in": "path",
                        "description": "The ID of the location to list refunds for."
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application\/json": {
                                "schema": {
                                    "$href": "#\/components\/schemas\/ListCustomersResponse"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Address": {
                "type": "object",
                "properties": {
                    "address_line_1": {
                        "description": "",
                        "type": "string"
                    },
                    "address_line_2": {
                        "description": "",
                        "type": "string"
                    },
                    "address_line_3": {
                        "description": "",
                        "type": "string"
                    },
                    "administrative_district_level_1": {
                        "description": "",
                        "type": "string"
                    },
                    "administrative_district_level_2": {
                        "description": "",
                        "type": "string"
                    },
                    "administrative_district_level_3": {
                        "description": "",
                        "type": "string"
                    },
                    "country": {
                        "description": "",
                        "type": "string"
                    },
                    "locality": {
                        "description": "",
                        "type": "string"
                    },
                    "postal_code": {
                        "description": "",
                        "type": "string"
                    },
                    "sublocality": {
                        "description": "",
                        "type": "string"
                    },
                    "sublocality_2": {
                        "description": "",
                        "type": "string"
                    },
                    "sublocality_3": {
                        "description": "",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "Optional first name when it's representing recipient.",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Optional last name when it's representing recipient.",
                        "type": "string"
                    },
                    "organization": {
                        "description": "Optional organization name when it's representing recipient.",
                        "type": "string"
                    }
                }
            },
            "CaptureTransactionResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "errors": {
                "type": "array"
            },
            "Card": {
                "type": "object",
                "properties": {
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "billing_address": {
                        "description": "The billing address for the card on file.",
                        "type": ""
                    },
                    "card_brand": {
                        "description": "The card's brand (such as `VISA`).",
                        "type": "string"
                    },
                    "cardholder_name": {
                        "description": "The cardholder name for the card on file.",
                        "type": "string"
                    },
                    "exp_month": {
                        "description": "The month of the card's expiration date, which must be between 1-12.",
                        "type": "integer"
                    },
                    "exp_year": {
                        "description": "The year of the card's expiration date, which must be a 4-digit year.",
                        "type": "integer"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "last_4": {
                        "description": "The last 4 digits of the card's number.",
                        "type": "string"
                    },
                    "fingerprint": {
                        "description": "The unique string fingerprint for the card. \nThe fingerprint is based on the credit card number and is unique to the merchant. \nIf a card is used at multiple locations for the same merchant, it will have the same fingerprint in each case.\nNote: Fingerprint may not exist on old transactions.",
                        "type": "string"
                    }
                }
            },
            "ChargeRequest": {
                "type": "object",
                "properties": {
                    "amount_money": {
                        "description": "The amount of money to collect in the transaction.",
                        "type": ""
                    },
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "billing_address": {
                        "description": "The billing address for the card on file.",
                        "type": ""
                    },
                    "card_nonce": {
                        "description": "A nonce representing the credit card to charge for this transaction.\nDo not provide a value for this field if you provide a value for\n`customer_card_id`.",
                        "type": "string"
                    },
                    "customer_card_id": {
                        "description": "The ID of the customer card on file to charge for this transaction. Do\nnot provide a value for this field if you provide a value for `card_nonce`.",
                        "type": "string"
                    },
                    "customer_id": {
                        "description": "The ID of the customer to associate this transaction with. This field\nis required if you provide a value for `customer_card_id`, and optional\notherwise.",
                        "type": "string"
                    },
                    "delay_capture": {
                        "description": "If `true`, the request will only perform an Auth on the provided\ncard. You can then later perform either a Capture (with the\n*CaptureTransaction** endpoint) or a Void (with the **VoidTransation**\nendpoint.",
                        "type": "boolean"
                    },
                    "idempotency_key": {
                        "description": "A value you specify that uniquely identifies this\ntransaction among transactions you've created.\n\nIf you're unsure whether a particular transaction succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about double-charging the buyer. Note that *all other fields*\nmust also remain identical in your followup request, or an error will occur.",
                        "type": "string"
                    },
                    "note": {
                        "description": "An optional note to associate with the transaction.",
                        "type": "string"
                    },
                    "reference_id": {
                        "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).",
                        "type": "string"
                    },
                    "shipping_address": {
                        "description": "",
                        "type": ""
                    },
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "buyer_email_address": {
                        "description": "The buyer's email address, if available. This value is optional,\nbut this transaction is ineligible for chargeback protection if it is not\nprovided.",
                        "type": "string"
                    }
                }
            },
            "amount_money": {
                "type": "object"
            },
            "ChargeResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "transaction": {
                        "description": "The details of the created transaction.",
                        "type": ""
                    }
                }
            },
            "transaction": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "location_id": {
                        "description": "The ID of the refund's associated location.",
                        "type": "string"
                    },
                    "product": {
                        "description": "The product that processed the transaction.",
                        "type": "string"
                    },
                    "reference_id": {
                        "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).",
                        "type": "string"
                    },
                    "refunds": {
                        "description": "An array of refunds that match your query.",
                        "type": "array"
                    },
                    "tenders": {
                        "description": "Descriptions of the tenders used to pay for the transaction.",
                        "type": "array"
                    },
                    "client_id": {
                        "description": "If the transaction was created in the Square Point of Sale app, this value\nis the ID generated for the transaction by Square Point of Sale.\n\nThis ID has no relationship to the transaction's canonical `id`, which is\ngenerated by Square's backend servers. This value is generated for bookkeeping\npurposes, in case the transaction cannot immediately be completed (for example,\nif the transaction is processed in offline mode).\n\nIt is not currently possible with the Connect API to perform a transaction\nlookup by this value.",
                        "type": "string"
                    },
                    "order": {
                        "description": "Order to be checked out.",
                        "type": ""
                    },
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "shipping_address": {
                        "description": "",
                        "type": ""
                    }
                }
            },
            "CreateCustomerCardRequest": {
                "type": "object",
                "properties": {
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "billing_address": {
                        "description": "The billing address for the card on file.",
                        "type": ""
                    },
                    "card_nonce": {
                        "description": "A nonce representing the credit card to charge for this transaction.\nDo not provide a value for this field if you provide a value for\n`customer_card_id`.",
                        "type": "string"
                    },
                    "cardholder_name": {
                        "description": "The cardholder name for the card on file.",
                        "type": "string"
                    }
                }
            },
            "CreateCustomerCardResponse": {
                "type": "object",
                "properties": {
                    "Card": {
                        "description": "Represents a credit card.",
                        "type": "object"
                    },
                    "card": {
                        "description": "",
                        "type": ""
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "CreateCustomerRequest": {
                "type": "object",
                "properties": {
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "address": {
                        "description": "",
                        "type": ""
                    },
                    "company_name": {
                        "description": "",
                        "type": "string"
                    },
                    "email_address": {
                        "description": "",
                        "type": "string"
                    },
                    "family_name": {
                        "description": "",
                        "type": "string"
                    },
                    "given_name": {
                        "description": "",
                        "type": "string"
                    },
                    "nickname": {
                        "description": "",
                        "type": "string"
                    },
                    "note": {
                        "description": "An optional note to associate with the transaction.",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "",
                        "type": "string"
                    },
                    "reference_id": {
                        "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).",
                        "type": "string"
                    }
                }
            },
            "CreateCustomerResponse": {
                "type": "object",
                "properties": {
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "customer": {
                "type": "object",
                "properties": {
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "address": {
                        "description": "",
                        "type": ""
                    },
                    "cards": {
                        "description": "Cards on file for the customer.",
                        "type": "array"
                    },
                    "company_name": {
                        "description": "",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "email_address": {
                        "description": "",
                        "type": "string"
                    },
                    "family_name": {
                        "description": "",
                        "type": "string"
                    },
                    "given_name": {
                        "description": "",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "nickname": {
                        "description": "",
                        "type": "string"
                    },
                    "note": {
                        "description": "An optional note to associate with the transaction.",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "",
                        "type": "string"
                    },
                    "reference_id": {
                        "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).",
                        "type": "string"
                    },
                    "updated_at": {
                        "description": "The time when the customer was updated, in RFC 3339 format.",
                        "type": "string"
                    },
                    "groups": {
                        "description": "The groups the customer belongs to.",
                        "type": "array"
                    },
                    "preferences": {
                        "description": "The customer's preferences.",
                        "type": ""
                    },
                    "CustomerPreferences": {
                        "description": "Represents a particular customer's preferences.",
                        "type": "object"
                    }
                }
            },
            "CreateRefundRequest": {
                "type": "object",
                "properties": {
                    "amount_money": {
                        "description": "The amount of money to collect in the transaction.",
                        "type": ""
                    },
                    "idempotency_key": {
                        "description": "A value you specify that uniquely identifies this\ntransaction among transactions you've created.\n\nIf you're unsure whether a particular transaction succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about double-charging the buyer. Note that *all other fields*\nmust also remain identical in your followup request, or an error will occur.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "A description of the reason for the refund.",
                        "type": "string"
                    },
                    "tender_id": {
                        "description": "The ID of the tender to refund.",
                        "type": "string"
                    },
                    "Money": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "CreateRefundResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "refund": {
                        "description": "The details of the created refund.",
                        "type": ""
                    }
                }
            },
            "refund": {
                "type": "object",
                "properties": {
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "amount_money": {
                        "description": "The amount of money to collect in the transaction.",
                        "type": ""
                    },
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "location_id": {
                        "description": "The ID of the refund's associated location.",
                        "type": "string"
                    },
                    "processing_fee_money": {
                        "description": "The amount of processing fee refunded.",
                        "type": ""
                    },
                    "reason": {
                        "description": "A description of the reason for the refund.",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "tender_id": {
                        "description": "The ID of the tender to refund.",
                        "type": "string"
                    },
                    "transaction_id": {
                        "description": "The ID of the transaction refunded.",
                        "type": "string"
                    }
                }
            },
            "cards": {
                "type": "array"
            },
            "DeleteCustomerCardResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "DeleteCustomerResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "Error": {
                "type": "object",
                "properties": {
                    "category": {
                        "description": "",
                        "type": "string"
                    },
                    "code": {
                        "description": "",
                        "type": "string"
                    },
                    "detail": {
                        "description": "",
                        "type": "string"
                    },
                    "field": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "ListCustomersRequest": {
                "type": "object",
                "properties": {
                    "cursor": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "ListCustomersResponse": {
                "type": "object",
                "properties": {
                    "cursor": {
                        "description": "",
                        "type": "string"
                    },
                    "customers": {
                        "description": "",
                        "type": "array"
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "customers": {
                "type": "array"
            },
            "ListLocationsResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "locations": {
                        "description": "An array of the business's locations.",
                        "type": "array"
                    }
                }
            },
            "locations": {
                "type": "array"
            },
            "ListRefundsRequest": {
                "type": "object",
                "properties": {
                    "begin_time": {
                        "description": "The beginning of the requested reporting period, in RFC 3339 format.",
                        "type": "string"
                    },
                    "cursor": {
                        "description": "",
                        "type": "string"
                    },
                    "end_time": {
                        "description": "The end of the requested reporting period, in RFC 3339 format.",
                        "type": "string"
                    },
                    "sort_order": {
                        "description": "The order in which results are listed in the response.",
                        "type": "string"
                    }
                }
            },
            "ListRefundsResponse": {
                "type": "object",
                "properties": {
                    "cursor": {
                        "description": "",
                        "type": "string"
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "refunds": {
                        "description": "An array of refunds that match your query.",
                        "type": "array"
                    }
                }
            },
            "refunds": {
                "type": "array"
            },
            "ListTransactionsRequest": {
                "type": "object",
                "properties": {
                    "begin_time": {
                        "description": "The beginning of the requested reporting period, in RFC 3339 format.",
                        "type": "string"
                    },
                    "cursor": {
                        "description": "",
                        "type": "string"
                    },
                    "end_time": {
                        "description": "The end of the requested reporting period, in RFC 3339 format.",
                        "type": "string"
                    },
                    "sort_order": {
                        "description": "The order in which results are listed in the response.",
                        "type": "string"
                    }
                }
            },
            "ListTransactionsResponse": {
                "type": "object",
                "properties": {
                    "cursor": {
                        "description": "",
                        "type": "string"
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "transactions": {
                        "description": "An array of transactions that match your query.",
                        "type": "array"
                    }
                }
            },
            "transactions": {
                "type": "array"
            },
            "Location": {
                "type": "object",
                "properties": {
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "address": {
                        "description": "",
                        "type": ""
                    },
                    "capabilities": {
                        "description": "Indicates which Square features are enabled for the location.\n\nCurrently, there is only one value that might be present in this array:\n`CREDIT_CARD_PROCESSING`.",
                        "type": "array"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "timezone": {
                        "description": "The IANA Timezone Database identifier for the location's timezone.",
                        "type": "string"
                    }
                }
            },
            "capabilities": {
                "type": "array"
            },
            "Money": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount in the lowest denominated value of this Currency. E.g. in USD\nthese are cents, in JPY they are Yen (which do not have a 'cent' concept).",
                        "type": "integer"
                    },
                    "Currency": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "RetrieveCustomerResponse": {
                "type": "object",
                "properties": {
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "RetrieveTransactionResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "transaction": {
                        "description": "The details of the created transaction.",
                        "type": ""
                    }
                }
            },
            "Tender": {
                "type": "object",
                "properties": {
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "amount_money": {
                        "description": "The amount of money to collect in the transaction.",
                        "type": ""
                    },
                    "card_details": {
                        "description": "The details of the card tender.\nThis value is present only if the value of `type` is `CARD`.",
                        "type": ""
                    },
                    "cash_details": {
                        "description": "The details of the cash tender.\nThis value is present only if the value of `type` is `CASH`.",
                        "type": ""
                    },
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "customer_id": {
                        "description": "The ID of the customer to associate this transaction with. This field\nis required if you provide a value for `customer_card_id`, and optional\notherwise.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "location_id": {
                        "description": "The ID of the refund's associated location.",
                        "type": "string"
                    },
                    "note": {
                        "description": "An optional note to associate with the transaction.",
                        "type": "string"
                    },
                    "processing_fee_money": {
                        "description": "The amount of processing fee refunded.",
                        "type": ""
                    },
                    "transaction_id": {
                        "description": "The ID of the transaction refunded.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    },
                    "TenderCardDetails": {
                        "description": "Represents the details of a credit card tender.",
                        "type": "object"
                    },
                    "TenderCashDetails": {
                        "description": "Represents the details of a cash tender.",
                        "type": "object"
                    }
                }
            },
            "card_details": {
                "type": "object"
            },
            "cash_details": {
                "type": "object"
            },
            "TenderCardDetails": {
                "type": "object",
                "properties": {
                    "Card": {
                        "description": "Represents a credit card.",
                        "type": "object"
                    },
                    "card": {
                        "description": "",
                        "type": ""
                    },
                    "entry_method": {
                        "description": "The method used to read the card.",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    }
                }
            },
            "TenderCashDetails": {
                "type": "object",
                "properties": {
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "buyer_tendered_money": {
                        "description": "The total amount provided by the buyer for this tender, before change is given.",
                        "type": ""
                    },
                    "change_back_money": {
                        "description": "The change returned to the buyer for this tender. This amount should be >= 0.",
                        "type": ""
                    }
                }
            },
            "tenders": {
                "type": "array"
            },
            "UpdateCustomerRequest": {
                "type": "object",
                "properties": {
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "address": {
                        "description": "",
                        "type": ""
                    },
                    "company_name": {
                        "description": "",
                        "type": "string"
                    },
                    "email_address": {
                        "description": "",
                        "type": "string"
                    },
                    "family_name": {
                        "description": "",
                        "type": "string"
                    },
                    "given_name": {
                        "description": "",
                        "type": "string"
                    },
                    "nickname": {
                        "description": "",
                        "type": "string"
                    },
                    "note": {
                        "description": "An optional note to associate with the transaction.",
                        "type": "string"
                    },
                    "phone_number": {
                        "description": "",
                        "type": "string"
                    },
                    "reference_id": {
                        "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).",
                        "type": "string"
                    }
                }
            },
            "UpdateCustomerResponse": {
                "type": "object",
                "properties": {
                    "customer": {
                        "description": "",
                        "type": ""
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "VoidTransactionResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "BatchDeleteCatalogObjectsRequest": {
                "type": "object",
                "properties": {
                    "object_ids": {
                        "description": "The IDs of the [CatalogObject](#type-catalogobject)s to be deleted. When an object is deleted, other objects\nin the graph that depend on that object will be deleted as well (for example, deleting a\n[CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s).",
                        "type": "array"
                    }
                }
            },
            "object_ids": {
                "type": "array"
            },
            "BatchDeleteCatalogObjectsResponse": {
                "type": "object",
                "properties": {
                    "deleted_at": {
                        "description": "The database [timestamp](#workingwithdates) of this deletion in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
                        "type": "string"
                    },
                    "deleted_object_ids": {
                        "description": "The IDs of all [CatalogObject](#type-catalogobject)s deleted by this request.",
                        "type": "array"
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "deleted_object_ids": {
                "type": "array"
            },
            "BatchRetrieveCatalogObjectsRequest": {
                "type": "object",
                "properties": {
                    "include_related_objects": {
                        "description": "If `true`, the response will include additional objects that are related to the\nrequested objects, as follows:\n\nIf the `objects` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `objects` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response.",
                        "type": "boolean"
                    },
                    "object_ids": {
                        "description": "The IDs of the [CatalogObject](#type-catalogobject)s to be deleted. When an object is deleted, other objects\nin the graph that depend on that object will be deleted as well (for example, deleting a\n[CatalogItem](#type-catalogitem) will delete its [CatalogItemVariation](#type-catalogitemvariation)s).",
                        "type": "array"
                    }
                }
            },
            "BatchRetrieveCatalogObjectsResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "objects": {
                        "description": "A list of [CatalogObject](#type-catalogobject)s returned.",
                        "type": "array"
                    },
                    "related_objects": {
                        "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the object in the `objects` field.",
                        "type": "array"
                    }
                }
            },
            "objects": {
                "type": "array"
            },
            "related_objects": {
                "type": "array"
            },
            "BatchUpsertCatalogObjectsRequest": {
                "type": "object",
                "properties": {
                    "batches": {
                        "description": "A batch of [CatalogObject](#type-catalogobject)s to be inserted\/updated atomically.\nThe objects within a batch will be inserted in an all-or-nothing fashion, i.e., if an error occurs\nattempting to insert or update an object within a batch, the entire batch will be rejected. However, an error\nin one batch will not affect other batches within the same request.\n\nFor each object, its `updated_at` field is ignored and replaced with a current [timestamp](#workingwithdates), and its\n`is_deleted` field must not be set to `true`.\n\nTo modify an existing object, supply its ID. To create a new object, use an ID starting\nwith `#`. These IDs may be used to create relationships between an object and attributes of\nother objects that reference it. For example, you can create a [CatalogItem](#type-catalogitem) with\nID `#ABC` and a [CatalogItemVariation](#type-catalogitemvariation) with its `item_id` attribute set to\n`#ABC` in order to associate the [CatalogItemVariation](#type-catalogitemvariation) with its parent\n[CatalogItem](#type-catalogitem).\n\nAny `#`-prefixed IDs are valid only within a single atomic batch, and will be replaced by server-generated IDs.\n\nEach batch may contain up to 1,000 objects. The total number of objects across all batches for a single request\nmay not exceed 10,000. If either of these limits is violated, an error will be returned and no objects will\nbe inserted or updated.",
                        "type": "array"
                    },
                    "idempotency_key": {
                        "description": "A value you specify that uniquely identifies this\ntransaction among transactions you've created.\n\nIf you're unsure whether a particular transaction succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about double-charging the buyer. Note that *all other fields*\nmust also remain identical in your followup request, or an error will occur.",
                        "type": "string"
                    }
                }
            },
            "batches": {
                "type": "array"
            },
            "BatchUpsertCatalogObjectsResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "id_mappings": {
                        "description": "The mapping between client and server IDs for this Upsert.",
                        "type": "array"
                    },
                    "objects": {
                        "description": "A list of [CatalogObject](#type-catalogobject)s returned.",
                        "type": "array"
                    },
                    "updated_at": {
                        "description": "The time when the customer was updated, in RFC 3339 format.",
                        "type": "string"
                    }
                }
            },
            "id_mappings": {
                "type": "array"
            },
            "CaptureTransactionRequest": {
                "type": "object"
            },
            "CatalogCategory": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    }
                }
            },
            "CatalogDiscount": {
                "type": "object",
                "properties": {
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "amount_money": {
                        "description": "The amount of money to collect in the transaction.",
                        "type": ""
                    },
                    "discount_type": {
                        "description": "Indicates whether the discount is a fixed amount or percentage, or entered at the time of sale.\nSee [CatalogDiscountType](#type-catalogdiscounttype) for all possible values.",
                        "type": "string"
                    },
                    "label_color": {
                        "description": "The color of the discount's display label in the Square Point of Sale app.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "percentage": {
                        "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not include this field for amount-based or variable discounts.",
                        "type": "string"
                    },
                    "pin_required": {
                        "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the\ndiscount to a payment in the Square Point of Sale app.",
                        "type": "boolean"
                    }
                }
            },
            "CatalogIdMapping": {
                "type": "object",
                "properties": {
                    "client_object_id": {
                        "description": "The client-supplied, temporary `#`-prefixed ID for a new [CatalogObject](#type-catalogobject).",
                        "type": "string"
                    },
                    "object_id": {
                        "description": "The permanent ID for the [CatalogObject](#type-catalogobject) created by the server.",
                        "type": "string"
                    }
                }
            },
            "CatalogInfoRequest": {
                "type": "object"
            },
            "CatalogInfoResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "limits": {
                        "description": "",
                        "type": ""
                    },
                    "CatalogInfoResponseLimits": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "limits": {
                "type": "object"
            },
            "CatalogInfoResponseLimits": {
                "type": "object",
                "properties": {
                    "batch_delete_max_object_ids": {
                        "description": "The maximum number of object IDs that may be included in a single\n`\/v2\/catalog\/batch-delete` request.",
                        "type": "integer"
                    },
                    "batch_retrieve_max_object_ids": {
                        "description": "The maximum number of object IDs that may appear in a `\/v2\/catalog\/batch-retrieve`\nrequest.",
                        "type": "integer"
                    },
                    "batch_upsert_max_objects_per_batch": {
                        "description": "The maximum number of objects that may appear within a single batch in a\n`\/v2\/catalog\/batch-upsert` request.",
                        "type": "integer"
                    },
                    "batch_upsert_max_total_objects": {
                        "description": "The maximum number of objects that may appear across all batches in a\n`\/v2\/catalog\/batch-upsert` request.",
                        "type": "integer"
                    },
                    "search_max_page_limit": {
                        "description": "The maximum number of results that may be returned in a page of a\n`\/v2\/catalog\/search` response.",
                        "type": "integer"
                    },
                    "update_item_modifier_lists_max_item_ids": {
                        "description": "The maximum number of item IDs that may be included in a single\n`\/v2\/catalog\/update-item-modifier-lists` request.",
                        "type": "integer"
                    },
                    "update_item_modifier_lists_max_modifier_lists_to_disable": {
                        "description": "The maximum number of modifier list IDs to be disabled that may be included in\na single `\/v2\/catalog\/update-item-modifier-lists` request.",
                        "type": "integer"
                    },
                    "update_item_modifier_lists_max_modifier_lists_to_enable": {
                        "description": "The maximum number of modifier list IDs to be enabled that may be included in\na single `\/v2\/catalog\/update-item-modifier-lists` request.",
                        "type": "integer"
                    },
                    "update_item_taxes_max_item_ids": {
                        "description": "The maximum number of item IDs that may be included in a single\n`\/v2\/catalog\/update-item-taxes` request.",
                        "type": "integer"
                    },
                    "update_item_taxes_max_taxes_to_disable": {
                        "description": "The maximum number of tax IDs to be disabled that may be included in a single\n`\/v2\/catalog\/update-item-taxes` request.",
                        "type": "integer"
                    },
                    "update_item_taxes_max_taxes_to_enable": {
                        "description": "The maximum number of tax IDs to be enabled that may be included in a single\n`\/v2\/catalog\/update-item-taxes` request.",
                        "type": "integer"
                    }
                }
            },
            "CatalogItem": {
                "type": "object",
                "properties": {
                    "abbreviation": {
                        "description": "The text of the item's display label in the Square Point of Sale app. Only up to the first five characters of the string are used.  Searchable.",
                        "type": "string"
                    },
                    "available_electronically": {
                        "description": "If `true`, the item can be added to electronically fulfilled orders from the merchant's online store.",
                        "type": "boolean"
                    },
                    "available_for_pickup": {
                        "description": "If `true`, the item can be added to pickup orders from the merchant's online store.",
                        "type": "boolean"
                    },
                    "available_online": {
                        "description": "If `true`, the item can be added to shipping orders from the merchant's online store.",
                        "type": "boolean"
                    },
                    "category_id": {
                        "description": "The ID of the item's category, if any.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The item's description. Searchable.",
                        "type": "string"
                    },
                    "image_url": {
                        "description": "The URL of an image representing this item.",
                        "type": "string"
                    },
                    "label_color": {
                        "description": "The color of the discount's display label in the Square Point of Sale app.",
                        "type": "string"
                    },
                    "modifier_list_info": {
                        "description": "A set of [CatalogItemModifierListInfo](#type-catalogitemmodifierlistinfo) objects\nrepresenting the modifier lists that apply to this item, along with the overrides and min\nand max limits that are specific to this item. [CatalogModifierList](#type-catalogmodifierlist)s\nmay also be added to or deleted from an item using `UpdateItemModifierLists`.",
                        "type": "array"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "product_type": {
                        "description": "The product type of the item. May not be changed once an item has been created.\n\nOnly items of product type `REGULAR` may be created by this API; items with other product\ntypes are read-only. See [CatalogItemProductType](#type-catalogitemproducttype) for all possible values.",
                        "type": "string"
                    },
                    "skip_modifier_screen": {
                        "description": "If `false`, the Square Point of Sale app will present the [CatalogItem](#type-catalogitem)'s\ndetails screen immediately, allowing the merchant to choose [CatalogModifier](#type-catalogmodifier)s\nbefore adding the item to the cart.  This is the default behavior.\n\nIf `true`, the Square Point of Sale app will immediately add the item to the cart with the pre-selected\nmodifiers, and merchants can edit modifiers by drilling down onto the item's details.\n\nThird-party clients are encouraged to implement similar behaviors.",
                        "type": "boolean"
                    },
                    "tax_ids": {
                        "description": "A set of IDs indicating the [CatalogTax](#type-catalogtax)es that are enabled for\nthis item. When updating an item, any taxes listed here will be added to the item.\n[CatalogTax](#type-catalogtax)es may also be added to or deleted from an item using `UpdateItemTaxes`.",
                        "type": "array"
                    },
                    "variations": {
                        "description": "A list of [CatalogObject](#type-catalogobject)s containing the [CatalogItemVariation](#type-catalogitemvariation)s for this item.",
                        "type": "array"
                    }
                }
            },
            "modifier_list_info": {
                "type": "array"
            },
            "tax_ids": {
                "type": "array"
            },
            "variations": {
                "type": "array"
            },
            "CatalogItemModifierListInfo": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "description": "If `true`, enable this [CatalogModifierList](#type-catalogmodifierlist).",
                        "type": "boolean"
                    },
                    "max_selected_modifiers": {
                        "description": "If zero or larger, the largest number of [CatalogModifier](#type-catalogmodifier)s that can be selected from this [CatalogModifierList](#type-catalogmodifierlist).",
                        "type": "integer"
                    },
                    "min_selected_modifiers": {
                        "description": "If zero or larger, the smallest number of [CatalogModifier](#type-catalogmodifier)s that must be selected from this [CatalogModifierList](#type-catalogmodifierlist).",
                        "type": "integer"
                    },
                    "modifier_list_id": {
                        "description": "The ID of the [CatalogModifierList](#type-catalogmodifierlist) controlled by this [CatalogModifierListInfo](#type-catalogmodifierlistinfo).",
                        "type": "string"
                    },
                    "modifier_overrides": {
                        "description": "A set of [CatalogModifierOverride](#type-catalogmodifieroverride) objects that override whether a given [CatalogModifier](#type-catalogmodifier) is enabled by default.",
                        "type": "array"
                    }
                }
            },
            "modifier_overrides": {
                "type": "array"
            },
            "CatalogItemVariation": {
                "type": "object",
                "properties": {
                    "inventory_alert_threshold": {
                        "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer.",
                        "type": "integer"
                    },
                    "inventory_alert_type": {
                        "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal\nto its `inventory_alert_threshold`. See [InventoryAlertType](#type-inventoryalerttype) for all possible values.",
                        "type": "string"
                    },
                    "item_id": {
                        "description": "The ID of the [CatalogItem](#type-catalogitem) associated with this item variation. Searchable.",
                        "type": "string"
                    },
                    "location_overrides": {
                        "description": "Per-[location][#type-location] price and inventory overrides.",
                        "type": "array"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "price_money": {
                        "description": "The item variation's price, if fixed pricing is used.",
                        "type": ""
                    },
                    "pricing_type": {
                        "description": "Indicates whether the item variation's price is fixed or determined at the time\nof sale. See [CatalogPricingType](#type-catalogpricingtype) for all possible values.",
                        "type": "string"
                    },
                    "service_duration": {
                        "description": "If the [CatalogItem](#type-catalogitem) that owns this item variation is of type\n`APPOINTMENTS_SERVICE`, then this is the duration of the service in milliseconds. For\nexample, a 30 minute appointment would have the value `1800000`, which is equal to\n30 (minutes) * 60 (seconds per minute) * 1000 (milliseconds per second).",
                        "type": "integer"
                    },
                    "sku": {
                        "description": "The item variation's SKU, if any. Searchable.",
                        "type": "string"
                    },
                    "track_inventory": {
                        "description": "If `true`, inventory tracking is active for the variation.",
                        "type": "boolean"
                    },
                    "upc": {
                        "description": "The item variation's UPC, if any. Searchable.",
                        "type": "string"
                    },
                    "user_data": {
                        "description": "Arbitrary user metadata to associate with the item variation. Cannot exceed 255 characters. Searchable.",
                        "type": "string"
                    }
                }
            },
            "location_overrides": {
                "type": "array"
            },
            "CatalogModifier": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "price_money": {
                        "description": "The item variation's price, if fixed pricing is used.",
                        "type": ""
                    }
                }
            },
            "CatalogModifierList": {
                "type": "object",
                "properties": {
                    "modifiers": {
                        "description": "The options included in the [CatalogModifierList](#type-catalogmodifierlist).\nYou must include at least one [CatalogModifier](#type-catalogmodifier).\nEach [CatalogObject](#type-catalogobject) must have type `MODIFIER` and contain\n[CatalogModifier](#type-catalogmodifier) data.",
                        "type": "array"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "selection_type": {
                        "description": "Indicates whether multiple options from the [CatalogModifierList](#type-catalogmodifierlist)\ncan be applied to a single [CatalogItem](#type-catalogitem). See\n[CatalogModifierListSelectionType](#type-catalogmodifierlistselectiontype) for all possible values.",
                        "type": "string"
                    }
                }
            },
            "modifiers": {
                "type": "array"
            },
            "CatalogModifierOverride": {
                "type": "object",
                "properties": {
                    "modifier_id": {
                        "description": "The ID of the [CatalogModifier](#type-catalogmodifier) whose default behavior is being overridden.",
                        "type": "string"
                    },
                    "on_by_default": {
                        "description": "If `true`, this [CatalogModifier](#type-catalogmodifier) should be selected by default for this [CatalogItem](#type-catalogitem).",
                        "type": "boolean"
                    }
                }
            },
            "CatalogObject": {
                "type": "object",
                "properties": {
                    "absent_at_location_ids": {
                        "description": "A list of locations where the object is not present, even if `present_at_all_locations` is `true`.",
                        "type": "array"
                    },
                    "catalog_v1_ids": {
                        "description": "The Connect V1 IDs for this object at each [location][#type-location] where it is present, where they\ndiffer from the object's Connect V2 ID. The field will only be present for objects that\nhave been created or modified by legacy APIs.",
                        "type": "array"
                    },
                    "CatalogCategory": {
                        "description": "A category to which an [CatalogItem](#type-catalogitem) belongs in the Catalog object model.",
                        "type": "object"
                    },
                    "category_data": {
                        "description": "Structured data for a [CatalogCategory](#type-catalogcategory), set for CatalogObjects of type `CATEGORY`.",
                        "type": ""
                    },
                    "CatalogDiscount": {
                        "description": "A discount in the Catalog object model.",
                        "type": "object"
                    },
                    "discount_data": {
                        "description": "Structured data for a [CatalogDiscount](#type-catalogdiscount), set for CatalogObjects of type `DISCOUNT`.",
                        "type": ""
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "is_deleted": {
                        "description": "If `true`, the object has been deleted from the database. Must be `false` for new objects\nbeing inserted. When deleted, the `updated_at` field will equal the deletion time.",
                        "type": "boolean"
                    },
                    "CatalogItem": {
                        "description": "An item (i.e., product family) in the Catalog object model.",
                        "type": "object"
                    },
                    "item_data": {
                        "description": "Structured data for a [CatalogItem](#type-catalogitem), set for CatalogObjects of type `ITEM`.",
                        "type": ""
                    },
                    "CatalogItemVariation": {
                        "description": "An item variation (i.e., product) in the Catalog object model.",
                        "type": "object"
                    },
                    "item_variation_data": {
                        "description": "Structured data for a [CatalogItemVariation](#type-catalogitemvariation), set for CatalogObjects of type `ITEM_VARIATION`.",
                        "type": ""
                    },
                    "CatalogModifier": {
                        "description": "A modifier in the Catalog object model.",
                        "type": "object"
                    },
                    "modifier_data": {
                        "description": "Structured data for a [CatalogModifier](#type-catalogmodifier), set for CatalogObjects of type `MODIFIER`.",
                        "type": ""
                    },
                    "CatalogModifierList": {
                        "description": "A modifier list in the Catalog object model. A [CatalogModifierList](#type-catalogmodifierlist)\ncontains [Modifier](#type-catalogmodifier)s that can be applied to a [CatalogItem](#type-catalogitem)\nat the time of sale.\n\nFor example, a modifier list \"Condiments\" that would apply to a \"Hot Dog\" [CatalogItem](#type-catalogitem) might\ncontain [CatalogModifier](#type-catalogmodifier)s \"Ketchup\", \"Mustard\", and \"Relish\". The\n`selection_type` field specifies whether or not multiple selections from the modifier list are allowed.",
                        "type": "object"
                    },
                    "modifier_list_data": {
                        "description": "Structured data for a [CatalogModifierList](#type-catalogmodifierlist), set for CatalogObjects of type `MODIFIER_LIST`.",
                        "type": ""
                    },
                    "present_at_all_locations": {
                        "description": "If `true`, this object is present at all locations (including future locations), except where specified in\nthe `absent_at_location_ids` field. If `false`, this object is not present at any locations (including future locations),\nexcept where specified in the `present_at_location_ids` field.",
                        "type": "boolean"
                    },
                    "present_at_location_ids": {
                        "description": "A list of locations where the object is present, even if `present_at_all_locations` is `false`.",
                        "type": "array"
                    },
                    "tax_data": {
                        "description": "Structured data for a [CatalogTax](#type-catalogtax), set for CatalogObjects of type `TAX`.",
                        "type": ""
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    },
                    "updated_at": {
                        "description": "The time when the customer was updated, in RFC 3339 format.",
                        "type": "string"
                    },
                    "version": {
                        "description": "The version of the object. When updating an object, the version supplied by the\nmust match the version in the database, otherwise the write will be rejected as conflicting.",
                        "type": "integer"
                    },
                    "CatalogTax": {
                        "description": "A tax in the Catalog object model.",
                        "type": "object"
                    }
                }
            },
            "absent_at_location_ids": {
                "type": "array"
            },
            "catalog_v1_ids": {
                "type": "array"
            },
            "present_at_location_ids": {
                "type": "array"
            },
            "tax_data": {
                "type": "object"
            },
            "CatalogObjectBatch": {
                "type": "object",
                "properties": {
                    "objects": {
                        "description": "A list of [CatalogObject](#type-catalogobject)s returned.",
                        "type": "array"
                    }
                }
            },
            "CatalogQuery": {
                "type": "object",
                "properties": {
                    "exact_query": {
                        "description": "A query that returns only objects for which the given (string-valued) attribute has the\ngiven case-insensitive value.",
                        "type": ""
                    },
                    "items_for_modifier_list_query": {
                        "description": "A query that returns all [CatalogItem](#type-catalogitem)s that have any of the given [CatalogModifierList](#type-catalogmodifierlist)s enabled.",
                        "type": ""
                    },
                    "items_for_tax_query": {
                        "description": "A query that returns all [CatalogItem](#type-catalogitem)s that have any of the given [CatalogTax](#type-catalogtax)es enabled.",
                        "type": ""
                    },
                    "prefix_query": {
                        "description": "A query that returns only objects for which the given (string-valued) attribute has the\ngiven case-insensitive prefix.",
                        "type": ""
                    },
                    "range_query": {
                        "description": "A query that returns only objects for which the given (integer-valued) attribute lies in the given range.",
                        "type": ""
                    },
                    "sorted_attribute_query": {
                        "description": "A query that returns all objects, sorted by the given attribute.",
                        "type": ""
                    },
                    "text_query": {
                        "description": "A query that returns only objects whose searchable attributes contain all of the given\nkeywords as prefixes. For example, if a [CatalogItem](#type-catalogitem) contains attributes `{\"name\": \"t-shirt\"}` and\n`{\"description\": \"Small, Purple\"}`, it will be matched by the query `{\"keywords\": [\"shirt\", \"sma\", \"purp\"]}`.",
                        "type": ""
                    },
                    "CatalogQueryExact": {
                        "description": "",
                        "type": "object"
                    },
                    "CatalogQueryItemsForModifierList": {
                        "description": "",
                        "type": "object"
                    },
                    "CatalogQueryItemsForTax": {
                        "description": "",
                        "type": "object"
                    },
                    "CatalogQueryPrefix": {
                        "description": "",
                        "type": "object"
                    },
                    "CatalogQueryRange": {
                        "description": "",
                        "type": "object"
                    },
                    "CatalogQuerySortedAttribute": {
                        "description": "",
                        "type": "object"
                    },
                    "CatalogQueryText": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "exact_query": {
                "type": "object"
            },
            "items_for_modifier_list_query": {
                "type": "object"
            },
            "items_for_tax_query": {
                "type": "object"
            },
            "prefix_query": {
                "type": "object"
            },
            "range_query": {
                "type": "object"
            },
            "sorted_attribute_query": {
                "type": "object"
            },
            "text_query": {
                "type": "object"
            },
            "CatalogQueryExact": {
                "type": "object",
                "properties": {
                    "attribute_name": {
                        "description": "The name of the attribute to be searched.",
                        "type": "string"
                    },
                    "attribute_value": {
                        "description": "The desired value of the search attribute.",
                        "type": "string"
                    }
                }
            },
            "CatalogQueryItemsForModifierList": {
                "type": "object",
                "properties": {
                    "modifier_list_ids": {
                        "description": "A set of [CatalogModifierList](#type-catalogmodifierlist) IDs to be used to find associated [CatalogItem](#type-catalogitem)s.",
                        "type": "array"
                    }
                }
            },
            "modifier_list_ids": {
                "type": "array"
            },
            "CatalogQueryItemsForTax": {
                "type": "object",
                "properties": {
                    "tax_ids": {
                        "description": "A set of IDs indicating the [CatalogTax](#type-catalogtax)es that are enabled for\nthis item. When updating an item, any taxes listed here will be added to the item.\n[CatalogTax](#type-catalogtax)es may also be added to or deleted from an item using `UpdateItemTaxes`.",
                        "type": "array"
                    }
                }
            },
            "CatalogQueryPrefix": {
                "type": "object",
                "properties": {
                    "attribute_name": {
                        "description": "The name of the attribute to be searched.",
                        "type": "string"
                    },
                    "attribute_prefix": {
                        "description": "The desired prefix of the search attribute value.",
                        "type": "string"
                    }
                }
            },
            "CatalogQueryRange": {
                "type": "object",
                "properties": {
                    "attribute_max_value": {
                        "description": "The desired maximum value for the search attribute (inclusive).",
                        "type": "integer"
                    },
                    "attribute_min_value": {
                        "description": "The desired minimum value for the search attribute (inclusive).",
                        "type": "integer"
                    },
                    "attribute_name": {
                        "description": "The name of the attribute to be searched.",
                        "type": "string"
                    }
                }
            },
            "CatalogQuerySortedAttribute": {
                "type": "object",
                "properties": {
                    "attribute_name": {
                        "description": "The name of the attribute to be searched.",
                        "type": "string"
                    },
                    "initial_attribute_value": {
                        "description": "The first attribute value to be returned by the query. Ascending sorts will return only\nobjects with this value or greater, while descending sorts will return only objects with this value\nor less. If unset, start at the beginning (for ascending sorts) or end (for descending sorts).",
                        "type": "string"
                    },
                    "sort_order": {
                        "description": "The order in which results are listed in the response.",
                        "type": "string"
                    }
                }
            },
            "CatalogQueryText": {
                "type": "object",
                "properties": {
                    "keywords": {
                        "description": "A list of one, two, or three search keywords. Keywords with fewer than three characters\nare ignored.",
                        "type": "array"
                    }
                }
            },
            "keywords": {
                "type": "array"
            },
            "CatalogTax": {
                "type": "object",
                "properties": {
                    "applies_to_custom_amounts": {
                        "description": "If `true`, the fee applies to custom amounts entered into the Square Point of Sale\napp that are not associated with a particular [CatalogItem](#type-catalogitem).",
                        "type": "boolean"
                    },
                    "calculation_phase": {
                        "description": "Whether the tax is calculated based on a payment's subtotal or total. See [TaxCalculationPhase](#type-taxcalculationphase) for all possible values.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "If `true`, enable this [CatalogModifierList](#type-catalogmodifierlist).",
                        "type": "boolean"
                    },
                    "inclusion_type": {
                        "description": "Whether the tax is `ADDITIVE` or `INCLUSIVE`. See [TaxInclusionType](#type-taxinclusiontype) for all possible values.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "percentage": {
                        "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not include this field for amount-based or variable discounts.",
                        "type": "string"
                    }
                }
            },
            "CatalogV1Id": {
                "type": "object",
                "properties": {
                    "catalog_v1_id": {
                        "description": "The ID for an object in Connect V1, if different from its Connect V2 ID.",
                        "type": "string"
                    },
                    "location_id": {
                        "description": "The ID of the refund's associated location.",
                        "type": "string"
                    }
                }
            },
            "Checkout": {
                "type": "object",
                "properties": {
                    "ask_for_shipping_address": {
                        "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`.",
                        "type": "boolean"
                    },
                    "checkout_page_url": {
                        "description": "The URL that the buyer's browser should be redirected to after the\ncheckout is completed.",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "merchant_support_email": {
                        "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant's Square account.\n\nDefault: none; only exists if explicitly set.",
                        "type": "string"
                    },
                    "order": {
                        "description": "Order to be checked out.",
                        "type": ""
                    },
                    "pre_populate_buyer_email": {
                        "description": "If provided, the buyer's email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set.",
                        "type": "string"
                    },
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "pre_populate_shipping_address": {
                        "description": "If provided, the buyer's shipping info is pre-populated on the\ncheckout page as editable text fields.\n\nDefault: none; only exists if explicitly set.",
                        "type": ""
                    },
                    "redirect_url": {
                        "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare's `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http:\/\/www.example.com\/order-complete`, a successful transaction redirects\nthe customer to:\n\n`http:\/\/www.example.com\/order-complete?checkoutId=xxxxxx&orderId=xxxxxx&referenceId=xxxxxx&transactionId=xxxxxx`\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing\/normal confirmation workflow.",
                        "type": "string"
                    }
                }
            },
            "order": {
                "type": "object",
                "properties": {
                    "line_items": {
                        "description": "The line items to associate with this order.\n\nEach line item represents a different product (or a custom monetary amount)\nto include in a purchase.",
                        "type": "array"
                    },
                    "location_id": {
                        "description": "The ID of the refund's associated location.",
                        "type": "string"
                    },
                    "reference_id": {
                        "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).",
                        "type": "string"
                    },
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "total_discount_money": {
                        "description": "The total discount amount of money to collect for the order.",
                        "type": ""
                    },
                    "total_money": {
                        "description": "The total amount of money to collect for the order.",
                        "type": ""
                    },
                    "total_tax_money": {
                        "description": "The total tax amount of money to collect for the order.",
                        "type": ""
                    }
                }
            },
            "CreateCheckoutRequest": {
                "type": "object",
                "properties": {
                    "ask_for_shipping_address": {
                        "description": "If `true`, Square Checkout will collect shipping information on your\nbehalf and store that information with the transaction information in your\nSquare Dashboard.\n\nDefault: `false`.",
                        "type": "boolean"
                    },
                    "idempotency_key": {
                        "description": "A value you specify that uniquely identifies this\ntransaction among transactions you've created.\n\nIf you're unsure whether a particular transaction succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about double-charging the buyer. Note that *all other fields*\nmust also remain identical in your followup request, or an error will occur.",
                        "type": "string"
                    },
                    "merchant_support_email": {
                        "description": "The email address to display on the Square Checkout confirmation page\nand confirmation email that the buyer can use to contact the merchant.\n\nIf this value is not set, the confirmation page and email will display the\nprimary email address associated with the merchant's Square account.\n\nDefault: none; only exists if explicitly set.",
                        "type": "string"
                    },
                    "order": {
                        "description": "Order to be checked out.",
                        "type": ""
                    },
                    "pre_populate_buyer_email": {
                        "description": "If provided, the buyer's email is pre-populated on the checkout page\nas an editable text field.\n\nDefault: none; only exists if explicitly set.",
                        "type": "string"
                    },
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "pre_populate_shipping_address": {
                        "description": "If provided, the buyer's shipping info is pre-populated on the\ncheckout page as editable text fields.\n\nDefault: none; only exists if explicitly set.",
                        "type": ""
                    },
                    "redirect_url": {
                        "description": "The URL to redirect to after checkout is completed with `checkoutId`,\nSquare's `orderId`, `transactionId`, and `referenceId` appended as URL\nparameters. For example, if the provided redirect_url is\n`http:\/\/www.example.com\/order-complete`, a successful transaction redirects\nthe customer to:\n\n`http:\/\/www.example.com\/order-complete?checkoutId=xxxxxx&orderId=xxxxxx&referenceId=xxxxxx&transactionId=xxxxxx`\n\nIf you do not provide a redirect URL, Square Checkout will display an order\nconfirmation page on your behalf; however Square strongly recommends that\nyou provide a redirect URL so you can verify the transaction results and\nfinalize the order through your existing\/normal confirmation workflow.",
                        "type": "string"
                    },
                    "CreateOrderRequest": {
                        "description": "Defines the parameters that can be included in the body of\na request to the [CreateCheckout](#endpoint-createcheckout) endpoint.",
                        "type": "object"
                    }
                }
            },
            "CreateCheckoutResponse": {
                "type": "object",
                "properties": {
                    "Checkout": {
                        "description": "Square Checkout lets merchants accept online payments for supported\npayment types using a checkout workflow hosted on squareup.com.",
                        "type": "object"
                    },
                    "checkout": {
                        "description": "The newly created checkout.\nIf the same request was made with the same idempotency_key, this will be the checkout created with the idempotency_key.",
                        "type": ""
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "CreateOrderRequest": {
                "type": "object",
                "properties": {
                    "discounts": {
                        "description": "The discounts include the custom discounts .",
                        "type": "array"
                    },
                    "line_items": {
                        "description": "The line items to associate with this order.\n\nEach line item represents a different product (or a custom monetary amount)\nto include in a purchase.",
                        "type": "array"
                    },
                    "reference_id": {
                        "description": "An optional ID you can associate with the transaction for your own\npurposes (such as to associate the transaction with an entity ID in your\nown database).",
                        "type": "string"
                    },
                    "taxes": {
                        "description": "The taxes include the custom taxes.",
                        "type": "array"
                    }
                }
            },
            "discounts": {
                "type": "array"
            },
            "line_items": {
                "type": "array"
            },
            "taxes": {
                "type": "array"
            },
            "CreateOrderRequestDiscount": {
                "type": "object",
                "properties": {
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "amount_money": {
                        "description": "The amount of money to collect in the transaction.",
                        "type": ""
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "percentage": {
                        "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not include this field for amount-based or variable discounts.",
                        "type": "string"
                    }
                }
            },
            "CreateOrderRequestLineItem": {
                "type": "object",
                "properties": {
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "base_price_money": {
                        "description": "The base price for a single unit of the line item's associated\nvariation. If a line item represents a Custom Amount instead of a\nparticular product, this field indicates that amount.",
                        "type": ""
                    },
                    "discounts": {
                        "description": "The discounts include the custom discounts .",
                        "type": "array"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "The quantity to purchase, as a string representation of a number.\nCurrently, only integer values are supported.",
                        "type": "string"
                    },
                    "taxes": {
                        "description": "The taxes include the custom taxes.",
                        "type": "array"
                    }
                }
            },
            "CreateOrderRequestTax": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "percentage": {
                        "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not include this field for amount-based or variable discounts.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    }
                }
            },
            "groups": {
                "type": "array"
            },
            "preferences": {
                "type": "object"
            },
            "CustomerGroupInfo": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    }
                }
            },
            "CustomerPreferences": {
                "type": "object",
                "properties": {
                    "email_unsubscribed": {
                        "description": "The customer has unsubscribed from receiving marketing campaign emails.",
                        "type": "boolean"
                    }
                }
            },
            "DeleteCatalogObjectRequest": {
                "type": "object"
            },
            "DeleteCatalogObjectResponse": {
                "type": "object",
                "properties": {
                    "deleted_at": {
                        "description": "The database [timestamp](#workingwithdates) of this deletion in RFC 3339 format, e.g., \"2016-09-04T23:59:33.123Z\".",
                        "type": "string"
                    },
                    "deleted_object_ids": {
                        "description": "The IDs of all [CatalogObject](#type-catalogobject)s deleted by this request.",
                        "type": "array"
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    }
                }
            },
            "DeleteCustomerCardRequest": {
                "type": "object"
            },
            "DeleteCustomerRequest": {
                "type": "object"
            },
            "Device": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    }
                }
            },
            "ItemVariationLocationOverrides": {
                "type": "object",
                "properties": {
                    "inventory_alert_threshold": {
                        "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer.",
                        "type": "integer"
                    },
                    "inventory_alert_type": {
                        "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal\nto its `inventory_alert_threshold`. See [InventoryAlertType](#type-inventoryalerttype) for all possible values.",
                        "type": "string"
                    },
                    "location_id": {
                        "description": "The ID of the refund's associated location.",
                        "type": "string"
                    },
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "price_money": {
                        "description": "The item variation's price, if fixed pricing is used.",
                        "type": ""
                    },
                    "pricing_type": {
                        "description": "Indicates whether the item variation's price is fixed or determined at the time\nof sale. See [CatalogPricingType](#type-catalogpricingtype) for all possible values.",
                        "type": "string"
                    },
                    "track_inventory": {
                        "description": "If `true`, inventory tracking is active for the variation.",
                        "type": "boolean"
                    }
                }
            },
            "ListCatalogRequest": {
                "type": "object",
                "properties": {
                    "cursor": {
                        "description": "",
                        "type": "string"
                    },
                    "types": {
                        "description": "An optional case-insensitive, comma-separated list of object types to retrieve, for example\n`ITEM,ITEM_VARIATION,CATEGORY`.\n\nThe legal values are taken from the [CatalogObjectType](#type-catalogobjecttype)\nenumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`, `\"DISCOUNT\"`, `\"TAX\"`,\n`\"MODIFIER\"`, or `\"MODIFIER_LIST\"`.",
                        "type": "string"
                    }
                }
            },
            "ListCatalogResponse": {
                "type": "object",
                "properties": {
                    "cursor": {
                        "description": "",
                        "type": "string"
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "objects": {
                        "description": "A list of [CatalogObject](#type-catalogobject)s returned.",
                        "type": "array"
                    }
                }
            },
            "ListLocationsRequest": {
                "type": "object"
            },
            "OrderLineItem": {
                "type": "object",
                "properties": {
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "base_price_money": {
                        "description": "The base price for a single unit of the line item's associated\nvariation. If a line item represents a Custom Amount instead of a\nparticular product, this field indicates that amount.",
                        "type": ""
                    },
                    "discounts": {
                        "description": "The discounts include the custom discounts .",
                        "type": "array"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "The quantity to purchase, as a string representation of a number.\nCurrently, only integer values are supported.",
                        "type": "string"
                    },
                    "taxes": {
                        "description": "The taxes include the custom taxes.",
                        "type": "array"
                    },
                    "total_discount_money": {
                        "description": "The total discount amount of money to collect for the order.",
                        "type": ""
                    },
                    "total_money": {
                        "description": "The total amount of money to collect for the order.",
                        "type": ""
                    },
                    "total_tax_money": {
                        "description": "The total tax amount of money to collect for the order.",
                        "type": ""
                    }
                }
            },
            "OrderLineItemDiscount": {
                "type": "object",
                "properties": {
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "amount_money": {
                        "description": "The amount of money to collect in the transaction.",
                        "type": ""
                    },
                    "applied_money": {
                        "description": "The amount of discount actually applied to this line item.\n\nRepresents the amount of money applied to a line item as a discount\nWhen an amount-based discount is at order-level, this value is different from `amount_money` because the discount is\ndistributed across the line items.",
                        "type": ""
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "percentage": {
                        "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not include this field for amount-based or variable discounts.",
                        "type": "string"
                    },
                    "scope": {
                        "description": "Indicates the level at which the discount applies.\nSee [OrderLineItemDiscountScope](#type-orderlineitemdiscountscope) for possible values.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    }
                }
            },
            "OrderLineItemTax": {
                "type": "object",
                "properties": {
                    "Money": {
                        "description": "",
                        "type": "object"
                    },
                    "applied_money": {
                        "description": "The amount of discount actually applied to this line item.\n\nRepresents the amount of money applied to a line item as a discount\nWhen an amount-based discount is at order-level, this value is different from `amount_money` because the discount is\ndistributed across the line items.",
                        "type": ""
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "percentage": {
                        "description": "The percentage of the discount as a string representation of a decimal number, using a `.` as the decimal\nseparator and without a `%` sign. A value of `7.5` corresponds to `7.5%`. Specify a percentage of `0` if `discount_type`\nis `VARIABLE_PERCENTAGE`.\n\nDo not include this field for amount-based or variable discounts.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    }
                }
            },
            "RetrieveCatalogObjectRequest": {
                "type": "object",
                "properties": {
                    "include_related_objects": {
                        "description": "If `true`, the response will include additional objects that are related to the\nrequested objects, as follows:\n\nIf the `objects` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `objects` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response.",
                        "type": "boolean"
                    }
                }
            },
            "RetrieveCatalogObjectResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "CatalogObject": {
                        "description": "The wrapper object for object types in the Catalog data model. The type\nof a particular `CatalogObject` is determined by the value of\n`type` and only the corresponding data field may be set.\n\n- if type = `ITEM`, only `item_data` will be populated and it will contain a valid [CatalogItem](#type-catalogitem) object.\n- if type = `ITEM_VARIATION`, only `item_variation_data` will be populated and it will contain a valid [CatalogItemVariation](#type-catalogitemvariation) object.\n- if type = `MODIFIER`, only `modifier_data` will be populated and it will contain a valid [CatalogModifier](#type-catalogmodifier) object.\n- if type = `MODIFIER_LIST`, only `modifier_list_data` will be populated and it will contain a valid [CatalogModifierList](#type-catalogmodifierlist) object.\n- if type = `CATEGORY`, only `category_data` will be populated and it will contain a valid [CatalogCategory](#type-catalogcategory) object.\n- if type = `DISCOUNT`, only `discount_data` will be populated and it will contain a valid [CatalogDiscount](#type-catalogdiscount) object.\n- if type = `TAX`, only `tax_data` will be populated and it will contain a valid [CatalogTax](#type-catalogtax) object.\n\nFor a more detailed discussion of the Catalog data model, please see the\n[Catalog Overview](https:\/\/docs.connect.squareup.com\/articles\/catalog-overview).",
                        "type": "object"
                    },
                    "object": {
                        "description": "The [CatalogObject](#type-catalogobject)s returned.",
                        "type": ""
                    },
                    "related_objects": {
                        "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the object in the `objects` field.",
                        "type": "array"
                    }
                }
            },
            "RetrieveCustomerRequest": {
                "type": "object"
            },
            "RetrieveTransactionRequest": {
                "type": "object"
            },
            "SearchCatalogObjectsRequest": {
                "type": "object",
                "properties": {
                    "begin_time": {
                        "description": "The beginning of the requested reporting period, in RFC 3339 format.",
                        "type": "string"
                    },
                    "cursor": {
                        "description": "",
                        "type": "string"
                    },
                    "include_deleted_objects": {
                        "description": "If `true`, deleted objects will be included in the results. Deleted objects will have their\n`is_deleted` field set to `true`.",
                        "type": "boolean"
                    },
                    "include_related_objects": {
                        "description": "If `true`, the response will include additional objects that are related to the\nrequested objects, as follows:\n\nIf the `objects` field of the response contains a [CatalogItem](#type-catalogitem),\nits associated [CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax)es, and\n[CatalogModifierList](#type-catalogmodifierlist)s will be returned in the `related_objects` field of the\nresponse. If the `objects` field of the response contains a [CatalogItemVariation](#type-catalogitemvariation),\nits parent [CatalogItem](#type-catalogitem) will be returned in the `related_objects` field of\nthe response.",
                        "type": "boolean"
                    },
                    "limit": {
                        "description": "A limit on the number of results to be returned in a single page. The limit is advisory -\nthe implementation may return more or fewer results. If the supplied limit is negative, zero, or\nis higher than the maximum limit of 1,000, it will be ignored.",
                        "type": "integer"
                    },
                    "object_types": {
                        "description": "The desired set of object types to appear in the search results. The legal values are taken from the\n[CatalogObjectType](#type-catalogobjecttype) enumeration, namely `\"ITEM\"`, `\"ITEM_VARIATION\"`, `\"CATEGORY\"`,\n`\"DISCOUNT\"`, `\"TAX\"`, `\"MODIFIER\"`, or `\"MODIFIER_LIST\"`.",
                        "type": "array"
                    },
                    "CatalogQuery": {
                        "description": "A query to be applied to a [SearchCatalogObjectsRequest](#type-searchcatalogobjectsrequest).\nOnly one query field may be present.\n\nWhere an attribute name is required, it should be specified as the name of any field\nmarked \"searchable\" from the structured data types for the desired result object type(s)\n([CatalogItem](#type-catalogitem), [CatalogItemVariation](#type-catalogitemvariation),\n[CatalogCategory](#type-catalogcategory), [CatalogTax](#type-catalogtax),\n[CatalogDiscount](#type-catalogdiscount), [CatalogModifierList](#type-catalogmodifierlist),\n[CatalogModifier](#type-catalogmodifier)).\n\nFor example, a query that should return Items may specify attribute names from\nany of the searchable fields of the [CatalogItem](#type-catalogitem) data type, namely\n`\"name\"`, `\"description\"`, and `\"abbreviation\"`.",
                        "type": "object"
                    },
                    "query": {
                        "description": "A query to be used to filter or sort the results. If no query is specified, the entire catalog will be returned.",
                        "type": ""
                    }
                }
            },
            "object_types": {
                "type": "array"
            },
            "SearchCatalogObjectsResponse": {
                "type": "object",
                "properties": {
                    "cursor": {
                        "description": "",
                        "type": "string"
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "objects": {
                        "description": "A list of [CatalogObject](#type-catalogobject)s returned.",
                        "type": "array"
                    },
                    "related_objects": {
                        "description": "A list of [CatalogObject](#type-catalogobject)s referenced by the object in the `objects` field.",
                        "type": "array"
                    }
                }
            },
            "UpdateItemModifierListsRequest": {
                "type": "object",
                "properties": {
                    "item_ids": {
                        "description": "The [CatalogItem](#type-catalogitem)s whose [CatalogModifierList](#type-catalogmodifierlist)s are being updated.",
                        "type": "array"
                    },
                    "modifier_lists_to_disable": {
                        "description": "The set of [CatalogModifierList](#type-catalogmodifierlist)s (referenced by ID) to disable for the [CatalogItem](#type-catalogitem).",
                        "type": "array"
                    },
                    "modifier_lists_to_enable": {
                        "description": "The set of [CatalogModifierList](#type-catalogmodifierlist)s (referenced by ID) to enable for the [CatalogItem](#type-catalogitem).",
                        "type": "array"
                    }
                }
            },
            "item_ids": {
                "type": "array"
            },
            "modifier_lists_to_disable": {
                "type": "array"
            },
            "modifier_lists_to_enable": {
                "type": "array"
            },
            "UpdateItemModifierListsResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "updated_at": {
                        "description": "The time when the customer was updated, in RFC 3339 format.",
                        "type": "string"
                    }
                }
            },
            "UpdateItemTaxesRequest": {
                "type": "object",
                "properties": {
                    "item_ids": {
                        "description": "The [CatalogItem](#type-catalogitem)s whose [CatalogModifierList](#type-catalogmodifierlist)s are being updated.",
                        "type": "array"
                    },
                    "taxes_to_disable": {
                        "description": "The set of [CatalogTax](#type-catalogtax)es (referenced by ID) to disable for the [CatalogItem](#type-catalogitem).",
                        "type": "array"
                    },
                    "taxes_to_enable": {
                        "description": "The set of [CatalogTax](#type-catalogtax)es (referenced by ID) to enable for the [CatalogItem](#type-catalogitem).",
                        "type": "array"
                    }
                }
            },
            "taxes_to_disable": {
                "type": "array"
            },
            "taxes_to_enable": {
                "type": "array"
            },
            "UpdateItemTaxesResponse": {
                "type": "object",
                "properties": {
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "updated_at": {
                        "description": "The time when the customer was updated, in RFC 3339 format.",
                        "type": "string"
                    }
                }
            },
            "UpsertCatalogObjectRequest": {
                "type": "object",
                "properties": {
                    "idempotency_key": {
                        "description": "A value you specify that uniquely identifies this\ntransaction among transactions you've created.\n\nIf you're unsure whether a particular transaction succeeded,\nyou can reattempt it with the same idempotency key without\nworrying about double-charging the buyer. Note that *all other fields*\nmust also remain identical in your followup request, or an error will occur.",
                        "type": "string"
                    },
                    "CatalogObject": {
                        "description": "The wrapper object for object types in the Catalog data model. The type\nof a particular `CatalogObject` is determined by the value of\n`type` and only the corresponding data field may be set.\n\n- if type = `ITEM`, only `item_data` will be populated and it will contain a valid [CatalogItem](#type-catalogitem) object.\n- if type = `ITEM_VARIATION`, only `item_variation_data` will be populated and it will contain a valid [CatalogItemVariation](#type-catalogitemvariation) object.\n- if type = `MODIFIER`, only `modifier_data` will be populated and it will contain a valid [CatalogModifier](#type-catalogmodifier) object.\n- if type = `MODIFIER_LIST`, only `modifier_list_data` will be populated and it will contain a valid [CatalogModifierList](#type-catalogmodifierlist) object.\n- if type = `CATEGORY`, only `category_data` will be populated and it will contain a valid [CatalogCategory](#type-catalogcategory) object.\n- if type = `DISCOUNT`, only `discount_data` will be populated and it will contain a valid [CatalogDiscount](#type-catalogdiscount) object.\n- if type = `TAX`, only `tax_data` will be populated and it will contain a valid [CatalogTax](#type-catalogtax) object.\n\nFor a more detailed discussion of the Catalog data model, please see the\n[Catalog Overview](https:\/\/docs.connect.squareup.com\/articles\/catalog-overview).",
                        "type": "object"
                    },
                    "object": {
                        "description": "The [CatalogObject](#type-catalogobject)s returned.",
                        "type": ""
                    }
                }
            },
            "UpsertCatalogObjectResponse": {
                "type": "object",
                "properties": {
                    "CatalogObject": {
                        "description": "The wrapper object for object types in the Catalog data model. The type\nof a particular `CatalogObject` is determined by the value of\n`type` and only the corresponding data field may be set.\n\n- if type = `ITEM`, only `item_data` will be populated and it will contain a valid [CatalogItem](#type-catalogitem) object.\n- if type = `ITEM_VARIATION`, only `item_variation_data` will be populated and it will contain a valid [CatalogItemVariation](#type-catalogitemvariation) object.\n- if type = `MODIFIER`, only `modifier_data` will be populated and it will contain a valid [CatalogModifier](#type-catalogmodifier) object.\n- if type = `MODIFIER_LIST`, only `modifier_list_data` will be populated and it will contain a valid [CatalogModifierList](#type-catalogmodifierlist) object.\n- if type = `CATEGORY`, only `category_data` will be populated and it will contain a valid [CatalogCategory](#type-catalogcategory) object.\n- if type = `DISCOUNT`, only `discount_data` will be populated and it will contain a valid [CatalogDiscount](#type-catalogdiscount) object.\n- if type = `TAX`, only `tax_data` will be populated and it will contain a valid [CatalogTax](#type-catalogtax) object.\n\nFor a more detailed discussion of the Catalog data model, please see the\n[Catalog Overview](https:\/\/docs.connect.squareup.com\/articles\/catalog-overview).",
                        "type": "object"
                    },
                    "catalog_object": {
                        "description": "The created [CatalogObject](#type-catalogobject).",
                        "type": ""
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "id_mappings": {
                        "description": "The mapping between client and server IDs for this Upsert.",
                        "type": "array"
                    }
                }
            },
            "VoidTransactionRequest": {
                "type": "object"
            },
            "v1AdjustInventoryRequest": {
                "type": "object",
                "properties": {
                    "adjustment_type": {
                        "description": "The reason for the inventory adjustment.",
                        "type": "number"
                    },
                    "memo": {
                        "description": "A note about the inventory adjustment.",
                        "type": "string"
                    },
                    "quantity_delta": {
                        "description": "The number to adjust the variation's quantity by.",
                        "type": "number"
                    }
                }
            },
            "v1BankAccount": {
                "type": "object",
                "properties": {
                    "account_number_suffix": {
                        "description": "The last few digits of the bank account number.",
                        "type": "string"
                    },
                    "bank_name": {
                        "description": "The name of the bank that manages the account.",
                        "type": "string"
                    },
                    "currency_code": {
                        "description": "The currency code of the currency associated with the bank account, in ISO 4217 format. For example, the currency code for US dollars is USD.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "merchant_id": {
                        "description": "The Square-issued ID of the merchant associated with the bank account.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "routing_number": {
                        "description": "The bank account's routing number.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    }
                }
            },
            "v1CashDrawerEvent": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The item's description. Searchable.",
                        "type": "string"
                    },
                    "employee_id": {
                        "description": "The ID of the employee that created the event.",
                        "type": "string"
                    },
                    "event_money": {
                        "description": "The amount of money that was added to or removed from the cash drawer because of the event. This value can be positive (for added money) or negative (for removed money).",
                        "type": ""
                    },
                    "event_type": {
                        "description": "The type of event that occurred.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "event_money": {
                "type": "object"
            },
            "v1CashDrawerShift": {
                "type": "object",
                "properties": {
                    "cash_paid_in_money": {
                        "description": "The amount of money added to the cash drawer for reasons other than cash payments.",
                        "type": ""
                    },
                    "cash_paid_out_money": {
                        "description": "The amount of money removed from the cash drawer for reasons other than cash refunds.",
                        "type": ""
                    },
                    "cash_payment_money": {
                        "description": "The amount of money added to the cash drawer from cash payments.",
                        "type": ""
                    },
                    "cash_refunds_money": {
                        "description": "The amount of money removed from the cash drawer from cash refunds. This value is always negative or zero.",
                        "type": ""
                    },
                    "closed_at": {
                        "description": "The time when the shift was closed, in ISO 8601 format.",
                        "type": "string"
                    },
                    "closed_cash_money": {
                        "description": "The amount of money found in the cash drawer at the end of the shift by an auditing employee.",
                        "type": ""
                    },
                    "closing_employee_id": {
                        "description": "The ID of the employee that closed the cash drawer shift by auditing the cash drawer's contents.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The item's description. Searchable.",
                        "type": "string"
                    },
                    "Device": {
                        "description": "",
                        "type": "object"
                    },
                    "device": {
                        "description": "The device running Square Register that was connected to the cash drawer.",
                        "type": ""
                    },
                    "employee_ids": {
                        "description": "The IDs of all employees that were logged into Square Register at some point during the cash drawer shift.",
                        "type": "array"
                    },
                    "ended_at": {
                        "description": "The time when the shift ended, in ISO 8601 format.",
                        "type": "boolean"
                    },
                    "ending_employee_id": {
                        "description": "The ID of the employee that ended the cash drawer shift.",
                        "type": "string"
                    },
                    "event_type": {
                        "description": "The type of event that occurred.",
                        "type": "string"
                    },
                    "events": {
                        "description": "All of the events (payments, refunds, and so on) that involved the cash drawer during the shift.",
                        "type": "array"
                    },
                    "expected_cash_money": {
                        "description": "The amount of money that should be in the cash drawer at the end of the shift, based on the shift's other money amounts.",
                        "type": ""
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "opened_at": {
                        "description": "The time when the shift began, in ISO 8601 format.",
                        "type": "string"
                    },
                    "opening_employee_id": {
                        "description": "The ID of the employee that started the cash drawer shift.",
                        "type": "string"
                    },
                    "starting_cash_money": {
                        "description": "The amount of money in the cash drawer at the start of the shift.",
                        "type": ""
                    },
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "cash_paid_in_money": {
                "type": "object"
            },
            "cash_paid_out_money": {
                "type": "object"
            },
            "cash_payment_money": {
                "type": "object"
            },
            "cash_refunds_money": {
                "type": "object"
            },
            "closed_cash_money": {
                "type": "object"
            },
            "employee_ids": {
                "type": "array"
            },
            "events": {
                "type": "array"
            },
            "expected_cash_money": {
                "type": "object"
            },
            "starting_cash_money": {
                "type": "object"
            },
            "v1Category": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    }
                }
            },
            "v1CreateRefundRequest": {
                "type": "object",
                "properties": {
                    "payment_id": {
                        "description": "The ID of the payment to refund. If you're creating a PARTIAL refund for a split tender payment, instead provide the id of the particular tender you want to refund. See Split Tender Payments for details.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "A description of the reason for the refund.",
                        "type": "string"
                    },
                    "refunded_money": {
                        "description": "The amount of money to refund. Required only for PARTIAL refunds.",
                        "type": ""
                    },
                    "request_idempotence_key": {
                        "description": "An optional key to ensure idempotence if you issue the same PARTIAL refund request more than once.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    },
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "refunded_money": {
                "type": "object"
            },
            "v1Discount": {
                "type": "object",
                "properties": {
                    "amount_money": {
                        "description": "The amount of money to collect in the transaction.",
                        "type": ""
                    },
                    "color": {
                        "description": "The color of the discount's display label in Square Register, if not the default color. The default color is 9da2a6.",
                        "type": "string"
                    },
                    "discount_type": {
                        "description": "Indicates whether the discount is a fixed amount or percentage, or entered at the time of sale.\nSee [CatalogDiscountType](#type-catalogdiscounttype) for all possible values.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "pin_required": {
                        "description": "Indicates whether a mobile staff member needs to enter their PIN to apply the\ndiscount to a payment in the Square Point of Sale app.",
                        "type": "boolean"
                    },
                    "rate": {
                        "description": "The rate of the discount, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%. This rate is 0 if discount_type is VARIABLE_PERCENTAGE.",
                        "type": "string"
                    },
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "v1Employee": {
                "type": "object",
                "properties": {
                    "authorized_location_ids": {
                        "description": "The IDs of the locations the employee is allowed to clock in at.",
                        "type": "array"
                    },
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The employee's email address.",
                        "type": "string"
                    },
                    "external_id": {
                        "description": "An ID the merchant can set to associate the employee with an entity in another system.",
                        "type": "string"
                    },
                    "first_name": {
                        "description": "Optional first name when it's representing recipient.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "last_name": {
                        "description": "Optional last name when it's representing recipient.",
                        "type": "string"
                    },
                    "role_ids": {
                        "description": "The ids of the employee's associated roles. Currently, you can specify only one or zero roles per employee.",
                        "type": "array"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "updated_at": {
                        "description": "The time when the customer was updated, in RFC 3339 format.",
                        "type": "string"
                    }
                }
            },
            "authorized_location_ids": {
                "type": "array"
            },
            "role_ids": {
                "type": "array"
            },
            "v1EmployeeRole": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "is_owner": {
                        "description": "If true, employees with this role have all permissions, regardless of the values indicated in permissions.",
                        "type": "boolean"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "permissions": {
                        "description": "The role's permissions.",
                        "type": "array"
                    },
                    "updated_at": {
                        "description": "The time when the customer was updated, in RFC 3339 format.",
                        "type": "string"
                    }
                }
            },
            "permissions": {
                "type": "array"
            },
            "v1Fee": {
                "type": "object",
                "properties": {
                    "adjustment_type": {
                        "description": "The type of adjustment the fee applies to a payment. Currently, this value is TAX for all fees.",
                        "type": "string"
                    },
                    "applies_to_custom_amounts": {
                        "description": "If `true`, the fee applies to custom amounts entered into the Square Point of Sale\napp that are not associated with a particular [CatalogItem](#type-catalogitem).",
                        "type": "boolean"
                    },
                    "calculation_phase": {
                        "description": "Whether the tax is calculated based on a payment's subtotal or total. See [TaxCalculationPhase](#type-taxcalculationphase) for all possible values.",
                        "type": "string"
                    },
                    "enabled": {
                        "description": "If `true`, enable this [CatalogModifierList](#type-catalogmodifierlist).",
                        "type": "boolean"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "inclusion_type": {
                        "description": "Whether the tax is `ADDITIVE` or `INCLUSIVE`. See [TaxInclusionType](#type-taxinclusiontype) for all possible values.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "rate": {
                        "description": "The rate of the discount, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%. This rate is 0 if discount_type is VARIABLE_PERCENTAGE.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    }
                }
            },
            "v1InventoryEntry": {
                "type": "object",
                "properties": {
                    "quantity_on_hand": {
                        "description": "The current available quantity of the item variation.",
                        "type": "number"
                    },
                    "variation_id": {
                        "description": "The variation that the entry corresponds to.",
                        "type": "string"
                    }
                }
            },
            "v1Item": {
                "type": "object",
                "properties": {
                    "abbreviation": {
                        "description": "The text of the item's display label in the Square Point of Sale app. Only up to the first five characters of the string are used.  Searchable.",
                        "type": "string"
                    },
                    "available_online": {
                        "description": "If `true`, the item can be added to shipping orders from the merchant's online store.",
                        "type": "boolean"
                    },
                    "v1Category": {
                        "description": "",
                        "type": "object"
                    },
                    "category": {
                        "description": "The category the item belongs to, if any.",
                        "type": ""
                    },
                    "color": {
                        "description": "The color of the discount's display label in Square Register, if not the default color. The default color is 9da2a6.",
                        "type": "string"
                    },
                    "description": {
                        "description": "The item's description. Searchable.",
                        "type": "string"
                    },
                    "fees": {
                        "description": "The fees that apply to the item, if any.",
                        "type": "array"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "master_image": {
                        "description": "The item's master image, if any.",
                        "type": ""
                    },
                    "modifier_lists": {
                        "description": "The modifier lists that apply to the item, if any.",
                        "type": "array"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "taxable": {
                        "description": "Deprecated. This field is not used.",
                        "type": "boolean"
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    },
                    "variations": {
                        "description": "A list of [CatalogObject](#type-catalogobject)s containing the [CatalogItemVariation](#type-catalogitemvariation)s for this item.",
                        "type": "array"
                    },
                    "visibility": {
                        "description": "Indicates whether the item is viewable from the merchant's online store (PUBLIC) or PRIVATE.",
                        "type": "string"
                    },
                    "v1ItemImage": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "fees": {
                "type": "array"
            },
            "master_image": {
                "type": "object"
            },
            "modifier_lists": {
                "type": "array"
            },
            "v1ItemImage": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "url": {
                        "description": "The image's publicly accessible URL.",
                        "type": "string"
                    }
                }
            },
            "v1Merchant": {
                "type": "object",
                "properties": {
                    "account_capabilities": {
                        "description": "Capabilities that are enabled for the merchant's Square account. Capabilities that are not listed in this array are not enabled for the account.",
                        "type": "array"
                    },
                    "account_type": {
                        "description": "Indicates whether the merchant account corresponds to a single-location account (LOCATION) or a business account (BUSINESS). This value is almost always LOCATION.",
                        "type": "string"
                    },
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "business_address": {
                        "description": "The address of the merchant's business.",
                        "type": ""
                    },
                    "business_name": {
                        "description": "The name of the merchant's business.",
                        "type": "string"
                    },
                    "business_phone": {
                        "description": "The phone number of the merchant's business.",
                        "type": ""
                    },
                    "business_type": {
                        "description": "The type of business operated by the merchant.",
                        "type": "string"
                    },
                    "country_code": {
                        "description": "The country associated with the merchant account, in ISO 3166-1-alpha-2 format.",
                        "type": "string"
                    },
                    "currency_code": {
                        "description": "The currency code of the currency associated with the bank account, in ISO 4217 format. For example, the currency code for US dollars is USD.",
                        "type": "string"
                    },
                    "email": {
                        "description": "The employee's email address.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "language_code": {
                        "description": "The language associated with the merchant account, in BCP 47 format.",
                        "type": "string"
                    },
                    "location_details": {
                        "description": "Additional information for a single-location account specified by its associated business account, if it has one.",
                        "type": "object"
                    },
                    "market_url": {
                        "description": "The URL of the merchant's online store.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "shipping_address": {
                        "description": "",
                        "type": ""
                    },
                    "v1PhoneNumber": {
                        "description": "Represents a phone number.",
                        "type": "object"
                    }
                }
            },
            "account_capabilities": {
                "type": "array"
            },
            "business_phone": {
                "type": "object"
            },
            "location_details": {
                "type": "object"
            },
            "v1ModifierList": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "modifier_options": {
                        "description": "The options included in the modifier list.",
                        "type": "array"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "selection_type": {
                        "description": "Indicates whether multiple options from the [CatalogModifierList](#type-catalogmodifierlist)\ncan be applied to a single [CatalogItem](#type-catalogitem). See\n[CatalogModifierListSelectionType](#type-catalogmodifierlistselectiontype) for all possible values.",
                        "type": "string"
                    }
                }
            },
            "modifier_options": {
                "type": "array"
            },
            "v1ModifierOption": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "modifier_list_id": {
                        "description": "The ID of the [CatalogModifierList](#type-catalogmodifierlist) controlled by this [CatalogModifierListInfo](#type-catalogmodifierlistinfo).",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "on_by_default": {
                        "description": "If `true`, this [CatalogModifier](#type-catalogmodifier) should be selected by default for this [CatalogItem](#type-catalogitem).",
                        "type": "boolean"
                    },
                    "ordinal": {
                        "description": "Indicates the modifier option's list position when displayed in Square Register and the merchant dashboard. If more than one modifier option in the same modifier list has the same ordinal value, those options are displayed in alphabetical order.",
                        "type": "integer"
                    },
                    "price_money": {
                        "description": "The item variation's price, if fixed pricing is used.",
                        "type": ""
                    },
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "price_money": {
                "type": "object"
            },
            "v1Money": {
                "type": "object",
                "properties": {
                    "amount": {
                        "description": "Amount in the lowest denominated value of this Currency. E.g. in USD\nthese are cents, in JPY they are Yen (which do not have a 'cent' concept).",
                        "type": "integer"
                    },
                    "currency_code": {
                        "description": "The currency code of the currency associated with the bank account, in ISO 4217 format. For example, the currency code for US dollars is USD.",
                        "type": "string"
                    }
                }
            },
            "v1Order": {
                "type": "object",
                "properties": {
                    "btc_price_satoshi": {
                        "description": "For Bitcoin transactions, the price of the buyer's order in satoshi (100 million satoshi equals 1 BTC).",
                        "type": "number"
                    },
                    "btc_receive_address": {
                        "description": "For Bitcoin transactions, the address that the buyer sent Bitcoin to.",
                        "type": "string"
                    },
                    "buyer_email": {
                        "description": "The email address of the order's buyer.",
                        "type": "string"
                    },
                    "buyer_note": {
                        "description": "A note provided by the buyer when the order was created, if any.",
                        "type": "string"
                    },
                    "canceled_note": {
                        "description": "A note provided by the merchant when the order's state was set to CANCELED, if any.",
                        "type": "string"
                    },
                    "completed_note": {
                        "description": "A note provided by the merchant when the order's state was set to COMPLETED, if any",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "expires_at": {
                        "description": "The time when the order expires if no action is taken, in ISO 8601 format.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "order_history": {
                        "description": "The history of actions associated with the order.",
                        "type": "array"
                    },
                    "payment_id": {
                        "description": "The ID of the payment to refund. If you're creating a PARTIAL refund for a split tender payment, instead provide the id of the particular tender you want to refund. See Split Tender Payments for details.",
                        "type": "string"
                    },
                    "promo_code": {
                        "description": "The promo code provided by the buyer, if any.",
                        "type": "string"
                    },
                    "recipient_name": {
                        "description": "The name of the order's buyer.",
                        "type": "string"
                    },
                    "recipient_phone_number": {
                        "description": "The phone number to use for the order's delivery.",
                        "type": "string"
                    },
                    "refunded_note": {
                        "description": "A note provided by the merchant when the order's state was set to REFUNDED, if any.",
                        "type": "string"
                    },
                    "Address": {
                        "description": "",
                        "type": "object"
                    },
                    "shipping_address": {
                        "description": "",
                        "type": ""
                    },
                    "state": {
                        "description": "Whether the tax is an ADDITIVE tax or an INCLUSIVE tax.",
                        "type": "string"
                    },
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    },
                    "subtotal_money": {
                        "description": "The amount of all items purchased in the order, before taxes and shipping.",
                        "type": ""
                    },
                    "tender": {
                        "description": "The tender used to pay for the order.",
                        "type": ""
                    },
                    "total_discount_money": {
                        "description": "The total discount amount of money to collect for the order.",
                        "type": ""
                    },
                    "total_price_money": {
                        "description": "The total cost of the order.",
                        "type": ""
                    },
                    "total_shipping_money": {
                        "description": "The shipping cost for the order.",
                        "type": ""
                    },
                    "total_tax_money": {
                        "description": "The total tax amount of money to collect for the order.",
                        "type": ""
                    },
                    "updated_at": {
                        "description": "The time when the customer was updated, in RFC 3339 format.",
                        "type": "string"
                    },
                    "v1Tender": {
                        "description": "",
                        "type": "object"
                    }
                }
            },
            "order_history": {
                "type": "array"
            },
            "tender": {
                "type": "array"
            },
            "v1OrderHistoryEntry": {
                "type": "object",
                "properties": {
                    "action": {
                        "description": "The type of action performed on the order.",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    }
                }
            },
            "v1Page": {
                "type": "object",
                "properties": {
                    "cells": {
                        "description": "The cells included on the page.",
                        "type": "array"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "page_index": {
                        "description": "The page's position in the merchant's list of pages. Always an integer between 0 and 4, inclusive.",
                        "type": "integer"
                    }
                }
            },
            "cells": {
                "type": "array"
            },
            "v1PageCell": {
                "type": "object",
                "properties": {
                    "column": {
                        "description": "The column of the cell. Always an integer between 0 and 4, inclusive.",
                        "type": "integer"
                    },
                    "object_id": {
                        "description": "The permanent ID for the [CatalogObject](#type-catalogobject) created by the server.",
                        "type": "string"
                    },
                    "object_type": {
                        "description": "The type of entity represented in the cell (ITEM, DISCOUNT, CATEGORY, or PLACEHOLDER).",
                        "type": "array"
                    },
                    "page_id": {
                        "description": "The unique identifier of the page the cell is included on.",
                        "type": "string"
                    },
                    "placeholder_type": {
                        "description": "For a cell with an object_type of PLACEHOLDER, this value indicates the cell's special behavior.",
                        "type": "array"
                    },
                    "row": {
                        "description": "The row of the cell. Always an integer between 0 and 4, inclusive.",
                        "type": "integer"
                    }
                }
            },
            "object_type": {
                "type": "array"
            },
            "placeholder_type": {
                "type": "array"
            },
            "v1Payment": {
                "type": "object",
                "properties": {
                    "additive_tax": {
                        "description": "All of the additive taxes associated with the payment.",
                        "type": "array"
                    },
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    },
                    "additive_tax_money": {
                        "description": "The sum of all additive taxes associated with the payment.",
                        "type": ""
                    },
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "creator_id": {
                        "description": "The unique identifier of the Square account that took the payment.",
                        "type": "string"
                    },
                    "Device": {
                        "description": "",
                        "type": "object"
                    },
                    "device": {
                        "description": "The device running Square Register that was connected to the cash drawer.",
                        "type": ""
                    },
                    "discount_money": {
                        "description": "The total of all discounts applied to the payment.",
                        "type": ""
                    },
                    "gross_sales_money": {
                        "description": "",
                        "type": ""
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "inclusive_tax": {
                        "description": "All of the inclusive taxes associated with the payment.",
                        "type": "array"
                    },
                    "inclusive_tax_money": {
                        "description": "The sum of all inclusive taxes associated with the payment.",
                        "type": ""
                    },
                    "itemizations": {
                        "description": "The items purchased in the payment.",
                        "type": "array"
                    },
                    "merchant_id": {
                        "description": "The Square-issued ID of the merchant associated with the bank account.",
                        "type": "string"
                    },
                    "net_sales_money": {
                        "description": "",
                        "type": ""
                    },
                    "net_total_money": {
                        "description": "The amount to be deposited into the merchant's bank account for the payment.",
                        "type": ""
                    },
                    "payment_url": {
                        "description": "The URL of the payment's detail page in the merchant dashboard. The merchant must be signed in to the merchant dashboard to view this page.",
                        "type": "string"
                    },
                    "processing_fee_money": {
                        "description": "The amount of processing fee refunded.",
                        "type": ""
                    },
                    "receipt_url": {
                        "description": "The URL of the receipt for the payment. Note that for split tender payments, this URL corresponds to the receipt for the first tender listed in the payment's tender field. Each Tender object has its own receipt_url field you can use to get the other receipts associated with a split tender payment.",
                        "type": "string"
                    },
                    "refunded_money": {
                        "description": "The amount of money to refund. Required only for PARTIAL refunds.",
                        "type": ""
                    },
                    "refunds": {
                        "description": "An array of refunds that match your query.",
                        "type": "array"
                    },
                    "swedish_rounding_money": {
                        "description": "",
                        "type": ""
                    },
                    "tax_money": {
                        "description": "The total of all taxes applied to the payment. This is always the sum of inclusive_tax_money and additive_tax_money.",
                        "type": ""
                    },
                    "tender": {
                        "description": "All of the additive taxes associated with the payment.",
                        "type": "array"
                    },
                    "tip_money": {
                        "description": "The total of all tips applied to the payment.",
                        "type": ""
                    },
                    "total_collected_money": {
                        "description": "The total of all discounts applied to the payment.",
                        "type": ""
                    }
                }
            },
            "additive_tax": {
                "type": "array"
            },
            "inclusive_tax": {
                "type": "array"
            },
            "itemizations": {
                "type": "array"
            },
            "v1PaymentDiscount": {
                "type": "object",
                "properties": {
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    },
                    "applied_money": {
                        "description": "The amount of discount actually applied to this line item.\n\nRepresents the amount of money applied to a line item as a discount\nWhen an amount-based discount is at order-level, this value is different from `amount_money` because the discount is\ndistributed across the line items.",
                        "type": ""
                    },
                    "discount_id": {
                        "description": "The ID of the applied discount, if available. Discounts applied in older versions of Square Register might not have an ID.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    }
                }
            },
            "v1PaymentItemDetail": {
                "type": "object",
                "properties": {
                    "category_name": {
                        "description": "The name of the item's merchant-defined category, if any.",
                        "type": "string"
                    },
                    "item_id": {
                        "description": "The ID of the [CatalogItem](#type-catalogitem) associated with this item variation. Searchable.",
                        "type": "string"
                    },
                    "item_variation_id": {
                        "description": "The unique ID of the item variation purchased, if any.",
                        "type": "string"
                    },
                    "sku": {
                        "description": "The item variation's SKU, if any. Searchable.",
                        "type": "string"
                    }
                }
            },
            "v1PaymentItemization": {
                "type": "object",
                "properties": {
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    },
                    "discount_money": {
                        "description": "The total of all discounts applied to the payment.",
                        "type": ""
                    },
                    "discounts": {
                        "description": "The discounts include the custom discounts .",
                        "type": "array"
                    },
                    "gross_sales_money": {
                        "description": "",
                        "type": ""
                    },
                    "v1PaymentItemDetail": {
                        "description": "",
                        "type": "object"
                    },
                    "item_detail": {
                        "description": "Details of the item, including its unique identifier and the identifier of the item variation purchased.",
                        "type": ""
                    },
                    "item_variation_name": {
                        "description": "The name of the item variation purchased, if any.",
                        "type": "string"
                    },
                    "itemization_type": {
                        "description": "The type of purchase that the itemization represents, such as an ITEM or CUSTOM_AMOUNT",
                        "type": "string"
                    },
                    "modifiers": {
                        "description": "The options included in the [CatalogModifierList](#type-catalogmodifierlist).\nYou must include at least one [CatalogModifier](#type-catalogmodifier).\nEach [CatalogObject](#type-catalogobject) must have type `MODIFIER` and contain\n[CatalogModifier](#type-catalogmodifier) data.",
                        "type": "array"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "net_sales_money": {
                        "description": "",
                        "type": ""
                    },
                    "notes": {
                        "description": "Notes entered by the merchant about the item at the time of payment, if any.",
                        "type": "string"
                    },
                    "quantity": {
                        "description": "The quantity of the item purchased. This can be a decimal value.",
                        "type": "number"
                    },
                    "single_quantity_money": {
                        "description": "The cost of a single unit of this item.",
                        "type": ""
                    },
                    "taxes": {
                        "description": "The taxes include the custom taxes.",
                        "type": "array"
                    },
                    "total_money": {
                        "description": "The total amount of money to collect for the order.",
                        "type": ""
                    }
                }
            },
            "v1PaymentModifier": {
                "type": "object",
                "properties": {
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    },
                    "applied_money": {
                        "description": "The amount of discount actually applied to this line item.\n\nRepresents the amount of money applied to a line item as a discount\nWhen an amount-based discount is at order-level, this value is different from `amount_money` because the discount is\ndistributed across the line items.",
                        "type": ""
                    },
                    "modifier_option_id": {
                        "description": "TThe ID of the applied modifier option, if available. Modifier options applied in older versions of Square Register might not have an ID.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    }
                }
            },
            "v1PaymentTax": {
                "type": "object",
                "properties": {
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    },
                    "applied_money": {
                        "description": "The amount of discount actually applied to this line item.\n\nRepresents the amount of money applied to a line item as a discount\nWhen an amount-based discount is at order-level, this value is different from `amount_money` because the discount is\ndistributed across the line items.",
                        "type": ""
                    },
                    "errors": {
                        "description": "Any errors that occurred during the request.",
                        "type": "array"
                    },
                    "fee_id": {
                        "description": "The ID of the tax, if available. Taxes applied in older versions of Square Register might not have an ID.",
                        "type": "string"
                    },
                    "inclusion_type": {
                        "description": "Whether the tax is `ADDITIVE` or `INCLUSIVE`. See [TaxInclusionType](#type-taxinclusiontype) for all possible values.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "rate": {
                        "description": "The rate of the discount, as a string representation of a decimal number. A value of 0.07 corresponds to a rate of 7%. This rate is 0 if discount_type is VARIABLE_PERCENTAGE.",
                        "type": "string"
                    }
                }
            },
            "v1PhoneNumber": {
                "type": "object",
                "properties": {
                    "calling_code": {
                        "description": "The phone number's international calling code. For US phone numbers, this value is +1.",
                        "type": "string"
                    },
                    "number": {
                        "description": "The phone number.",
                        "type": "string"
                    }
                }
            },
            "v1Refund": {
                "type": "object",
                "properties": {
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "merchant_id": {
                        "description": "The Square-issued ID of the merchant associated with the bank account.",
                        "type": "string"
                    },
                    "payment_id": {
                        "description": "The ID of the payment to refund. If you're creating a PARTIAL refund for a split tender payment, instead provide the id of the particular tender you want to refund. See Split Tender Payments for details.",
                        "type": "string"
                    },
                    "processed_at": {
                        "description": "The time when Square processed the refund on behalf of the merchant, in ISO 8601 format.",
                        "type": "string"
                    },
                    "reason": {
                        "description": "A description of the reason for the refund.",
                        "type": "string"
                    },
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    },
                    "refunded_additive_tax_money": {
                        "description": "The amount of additive tax money refunded.",
                        "type": ""
                    },
                    "refunded_discount_money": {
                        "description": "The amount of discount money refunded.",
                        "type": ""
                    },
                    "refunded_inclusive_tax_money": {
                        "description": "The amount of inclusive tax money refunded.",
                        "type": ""
                    },
                    "refunded_money": {
                        "description": "The amount of money to refund. Required only for PARTIAL refunds.",
                        "type": ""
                    },
                    "refunded_processing_fee_money": {
                        "description": "The amount of processing fee money refunded.",
                        "type": ""
                    },
                    "refunded_tip_money": {
                        "description": "The amount of tip money refunded.",
                        "type": ""
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    }
                }
            },
            "v1Settlement": {
                "type": "object",
                "properties": {
                    "bank_account_id": {
                        "description": "The Square-issued unique identifier for the bank account associated with the settlement.",
                        "type": "string"
                    },
                    "entries": {
                        "description": "The entries included in this settlement.",
                        "type": "array"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "initiated_at": {
                        "description": "The time when the settlement was submitted for deposit or withdrawal, in ISO 8601 format.",
                        "type": "string"
                    },
                    "status": {
                        "description": "",
                        "type": "string"
                    },
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    },
                    "total_money": {
                        "description": "The total amount of money to collect for the order.",
                        "type": ""
                    }
                }
            },
            "entries": {
                "type": "array"
            },
            "v1SettlementEntry": {
                "type": "object",
                "properties": {
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    },
                    "amount_money": {
                        "description": "The amount of money to collect in the transaction.",
                        "type": ""
                    },
                    "fee_money": {
                        "description": "The amount of all Square fees associated with this settlement entry. This value is always negative or zero.",
                        "type": ""
                    },
                    "payment_id": {
                        "description": "The ID of the payment to refund. If you're creating a PARTIAL refund for a split tender payment, instead provide the id of the particular tender you want to refund. See Split Tender Payments for details.",
                        "type": "string"
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    }
                }
            },
            "v1Tender": {
                "type": "object",
                "properties": {
                    "card_brand": {
                        "description": "The card's brand (such as `VISA`).",
                        "type": "string"
                    },
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    },
                    "change_back_money": {
                        "description": "The change returned to the buyer for this tender. This amount should be >= 0.",
                        "type": ""
                    },
                    "employee_id": {
                        "description": "The ID of the employee that created the event.",
                        "type": "string"
                    },
                    "entry_method": {
                        "description": "The method used to read the card.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "pan_suffix": {
                        "description": "The last four digits of the provided credit card's account number.",
                        "type": "string"
                    },
                    "payment_note": {
                        "description": "Notes entered by the merchant about the tender at the time of payment, if any. Typically only present for tender with the type: OTHER.",
                        "type": "string"
                    },
                    "receipt_url": {
                        "description": "The URL of the receipt for the payment. Note that for split tender payments, this URL corresponds to the receipt for the first tender listed in the payment's tender field. Each Tender object has its own receipt_url field you can use to get the other receipts associated with a split tender payment.",
                        "type": "string"
                    },
                    "refunded_money": {
                        "description": "The amount of money to refund. Required only for PARTIAL refunds.",
                        "type": ""
                    },
                    "tendered_money": {
                        "description": "The amount of total_money applied to the payment.",
                        "type": ""
                    },
                    "total_money": {
                        "description": "The total amount of money to collect for the order.",
                        "type": ""
                    },
                    "type": {
                        "description": "The type of tender.",
                        "type": "string"
                    }
                }
            },
            "v1Timecard": {
                "type": "object",
                "properties": {
                    "clockin_location_id": {
                        "description": "The ID of the location the employee clocked in from, if any.",
                        "type": "string"
                    },
                    "clockin_time": {
                        "description": "The clock-in time for the timecard, in ISO 8601 format.",
                        "type": "string"
                    },
                    "clockout_location_id": {
                        "description": "The ID of the location the employee clocked out from. Provide this value only if importing timecard information from another system.",
                        "type": "string"
                    },
                    "clockout_time": {
                        "description": "The clock-out time for the timecard, in ISO 8601 format. Provide this value only if importing timecard information from another system.",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "deleted": {
                        "description": "If true, the timecard was deleted by the merchant, and it is no longer valid.",
                        "type": "boolean"
                    },
                    "employee_id": {
                        "description": "The ID of the employee that created the event.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "updated_at": {
                        "description": "The time when the customer was updated, in RFC 3339 format.",
                        "type": "string"
                    }
                }
            },
            "v1TimecardEvent": {
                "type": "object",
                "properties": {
                    "clockin_time": {
                        "description": "The clock-in time for the timecard, in ISO 8601 format.",
                        "type": "string"
                    },
                    "clockout_time": {
                        "description": "The clock-out time for the timecard, in ISO 8601 format. Provide this value only if importing timecard information from another system.",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "The time when the customer was created, in RFC 3339 format.",
                        "type": "string"
                    },
                    "event_type": {
                        "description": "The type of event that occurred.",
                        "type": "string"
                    },
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    }
                }
            },
            "v1UpdateModifierListRequest": {
                "type": "object",
                "properties": {
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "selection_type": {
                        "description": "Indicates whether multiple options from the [CatalogModifierList](#type-catalogmodifierlist)\ncan be applied to a single [CatalogItem](#type-catalogitem). See\n[CatalogModifierListSelectionType](#type-catalogmodifierlistselectiontype) for all possible values.",
                        "type": "string"
                    }
                }
            },
            "v1UpdateOrderRequest": {
                "type": "object",
                "properties": {
                    "action": {
                        "description": "The type of action performed on the order.",
                        "type": "string"
                    },
                    "canceled_note": {
                        "description": "A note provided by the merchant when the order's state was set to CANCELED, if any.",
                        "type": "string"
                    },
                    "completed_note": {
                        "description": "A note provided by the merchant when the order's state was set to COMPLETED, if any",
                        "type": "string"
                    },
                    "refunded_note": {
                        "description": "A note provided by the merchant when the order's state was set to REFUNDED, if any.",
                        "type": "string"
                    },
                    "shipped_tracking_number": {
                        "description": "The tracking number of the shipment associated with the order. Only valid if action is COMPLETE.",
                        "type": "string"
                    }
                }
            },
            "v1Variation": {
                "type": "object",
                "properties": {
                    "id": {
                        "description": "The card's unique ID, if any.",
                        "type": "string"
                    },
                    "inventory_alert_threshold": {
                        "description": "If the inventory quantity for the variation is less than or equal to this value and `inventory_alert_type`\nis `LOW_QUANTITY`, the variation displays an alert in the merchant dashboard.\n\nThis value is always an integer.",
                        "type": "integer"
                    },
                    "inventory_alert_type": {
                        "description": "Indicates whether the item variation displays an alert when its inventory quantity is less than or equal\nto its `inventory_alert_threshold`. See [InventoryAlertType](#type-inventoryalerttype) for all possible values.",
                        "type": "string"
                    },
                    "item_id": {
                        "description": "The ID of the [CatalogItem](#type-catalogitem) associated with this item variation. Searchable.",
                        "type": "string"
                    },
                    "name": {
                        "description": "The name given to the location.",
                        "type": "string"
                    },
                    "ordinal": {
                        "description": "Indicates the modifier option's list position when displayed in Square Register and the merchant dashboard. If more than one modifier option in the same modifier list has the same ordinal value, those options are displayed in alphabetical order.",
                        "type": "integer"
                    },
                    "v1Money": {
                        "description": "",
                        "type": "object"
                    },
                    "price_money": {
                        "description": "The item variation's price, if fixed pricing is used.",
                        "type": ""
                    },
                    "pricing_type": {
                        "description": "Indicates whether the item variation's price is fixed or determined at the time\nof sale. See [CatalogPricingType](#type-catalogpricingtype) for all possible values.",
                        "type": "string"
                    },
                    "sku": {
                        "description": "The item variation's SKU, if any. Searchable.",
                        "type": "string"
                    },
                    "track_inventory": {
                        "description": "If `true`, inventory tracking is active for the variation.",
                        "type": "boolean"
                    },
                    "user_data": {
                        "description": "Arbitrary user metadata to associate with the item variation. Cannot exceed 255 characters. Searchable.",
                        "type": "string"
                    }
                }
            }
        }
    }
}